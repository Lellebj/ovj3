/*
 * @(#)dds_c_builtin.h    generated by: makeheader    Mon Dec  3 23:08:27 2007
 *
 *		built from:	builtin.ifc
 */

#ifndef dds_c_builtin_h
#define dds_c_builtin_h


  #ifndef dds_c_infrastructure_h
    #include "dds_c/dds_c_infrastructure.h"
  #endif
  #ifndef dds_c_sequence_h
    #include "dds_c/dds_c_sequence.h"
  #endif
  #ifndef dds_c_data_h
    #include "dds_c/dds_c_data.h"
  #endif
  #include "dds_c/dds_c_typecode.h"    
  #ifndef pres_typePlugin_h
    #include "pres/pres_typePlugin.h"
  #endif
#ifdef __cplusplus
    extern "C" {
#endif


#if defined(RTI_WIN32) || defined(RTI_WINCE)
/* stop compiler issuing warning on windows
 */
#pragma warning(disable:4190)
#endif /* RTI_WIN32 || RTI_WINCE */


#define DDS_BUILTIN_TOPIC_MAX_STRING_LENGTH     (256)


DDSC_VARIABLE_LENGTH_VALUE_TYPE_SUPPORT(DDS_ParticipantBuiltinTopicData);

struct DDS_ParticipantBuiltinTopicData {

    /*e \dref_ParticipantBuiltinTopicData_key
     */
    DDS_BuiltinTopicKey_t key;

    /*e \dref_ParticipantBuiltinTopicData_user_data
     */
    struct DDS_UserDataQosPolicy user_data;

    /* --- Extensions: ---------------------------------------------------- */

    /*e \dref_ParticipantBuiltinTopicData_property
     */
     struct DDS_PropertyQosPolicy property;
     
    /*e \dref_ParticipantBuiltinTopicData_rtps_protocol_version
     */
    DDS_ProtocolVersion_t rtps_protocol_version;

    /*e \dref_ParticipantBuiltinTopicData_rtps_vendor_id
     */
    struct DDS_VendorId_t rtps_vendor_id;

    /*e \dref_ParticipantBuiltinTopicData_dds_builtin_endpoints
     */
    DDS_UnsignedLong dds_builtin_endpoints;

    /*e \dref_ParticipantBuiltinTopicData_default_unicast_locators
     */
    struct DDS_LocatorSeq default_unicast_locators;

    /*e \dref_ParticipantBuiltinTopicData_product_version
     */
    struct DDS_ProductVersion_t product_version;

    /*i \dref_ParticipantBuiltinTopicData_plugin_promiscuity_kind
     * If making this field externally documented, add it to the print function
     */
    DDS_DiscoveryPluginPromiscuityKind plugin_promiscuity_kind;

    /*e \dref_ParticipantBuiltinTopicData_participant_name
     */
    struct DDS_EntityNameQosPolicy participant_name;
   

#ifdef __cplusplus
    DDS_ParticipantBuiltinTopicData() { }
    ~DDS_ParticipantBuiltinTopicData() {
	DDS_ParticipantBuiltinTopicData_finalize(this);
    }
    struct DDS_ParticipantBuiltinTopicData& operator=(
	const struct DDS_ParticipantBuiltinTopicData& from) {
        DDS_ParticipantBuiltinTopicData_copy(this, &from);
	return *this;
    }
#endif /* __cplusplus */
};


#define DDS_ParticipantBuiltinTopicData_INITIALIZER \
{ DDS_BuiltinTopicKey_t_INITIALIZER, DDS_USER_DATA_QOS_POLICY_DEFAULT, \
  DDS_PROPERTY_QOS_POLICY_DEFAULT, DDS_PROTOCOL_VERSION_DEFAULT, \
  DDS_VENDOR_ID_DEFAULT, 0, \
  DDS_SEQUENCE_INITIALIZER, \
  DDS_PRODUCTVERSION_UNKNOWN, \
  DDS_DISCOVERYPLUGIN_DISCOVER_MATCHING_REMOTE_ENTITIES_PROMISCUITY,\
  DDS_ENTITY_NAME_QOS_POLICY_DEFAULT}

extern DDSCDllVariable void 
DDS_ParticipantBuiltinTopicDataPlugin_print(
    const struct DDS_ParticipantBuiltinTopicData* userData,
    const char* desc, int indent);


DDSC_VARIABLE_LENGTH_VALUE_TYPE_SUPPORT(DDS_TopicBuiltinTopicData);

struct DDS_TopicBuiltinTopicData {

    /*e \dref_TopicBuiltinTopicData_key
     */
    DDS_BuiltinTopicKey_t key;

    /*e \dref_TopicBuiltinTopicData_name
     */
    char* name;

    /*e \dref_TopicBuiltinTopicData_type_name
     */
    char* type_name;

    /*e \dref_TopicBuiltinTopicData_durability
     */
    struct DDS_DurabilityQosPolicy durability;

    /*e \dref_TopicBuiltinTopicData_durability_service
     */
    struct DDS_DurabilityServiceQosPolicy durability_service;

    /*e \dref_TopicBuiltinTopicData_deadline
     */
    struct DDS_DeadlineQosPolicy deadline;

    /*e \dref_TopicBuiltinTopicData_latency_budget
     */
    struct DDS_LatencyBudgetQosPolicy latency_budget;

    /*e \dref_TopicBuiltinTopicData_liveliness
     */
    struct DDS_LivelinessQosPolicy liveliness;

    /*e \dref_TopicBuiltinTopicData_reliability
     */
    struct DDS_ReliabilityQosPolicy reliability;

    /*e \dref_TopicBuiltinTopicData_transport_priority
     */
    struct DDS_TransportPriorityQosPolicy transport_priority;

    /*e \dref_TopicBuiltinTopicData_lifespan
     */
    struct DDS_LifespanQosPolicy lifespan;

    /*e \dref_TopicBuiltinTopicData_destination_order
     */
    struct DDS_DestinationOrderQosPolicy destination_order;

    /*e \dref_TopicBuiltinTopicData_history
     */
    struct DDS_HistoryQosPolicy history;

    /*e \dref_TopicBuiltinTopicData_resource_limits
     */
    struct DDS_ResourceLimitsQosPolicy resource_limits;

    /*e \dref_TopicBuiltinTopicData_ownership
     */
    struct DDS_OwnershipQosPolicy ownership;

    /*e \dref_TopicBuiltinTopicData_topic_data
     */
    struct DDS_TopicDataQosPolicy topic_data;

#ifdef __cplusplus
    DDS_TopicBuiltinTopicData() { name = NULL; type_name = NULL; }
    ~DDS_TopicBuiltinTopicData() {
	DDS_TopicBuiltinTopicData_finalize(this);
    }
    struct DDS_TopicBuiltinTopicData& operator=(
	const struct DDS_TopicBuiltinTopicData& from) {
        DDS_TopicBuiltinTopicData_copy(this, &from);
	return *this;
    }
#endif /* __cplusplus */
};


#define DDS_TopicBuiltinTopicData_INITIALIZER \
{ DDS_BuiltinTopicKey_t_INITIALIZER, NULL, NULL, \
  DDS_DURABILITY_QOS_POLICY_DEFAULT, \
  DDS_DURABILITY_SERVICE_QOS_POLICY_DEFAULT, \
  DDS_DEADLINE_QOS_POLICY_DEFAULT, \
  DDS_LATENCY_BUDGET_QOS_POLICY_DEFAULT, \
  DDS_LIVELINESS_QOS_POLICY_DEFAULT, \
  DDS_RELIABILITY_QOS_POLICY_DEFAULT, \
  DDS_TRANSPORT_PRIORITY_QOS_POLICY_DEFAULT, \
  DDS_LIFESPAN_QOS_POLICY_DEFAULT, \
  DDS_DESTINATION_ORDER_QOS_POLICY_DEFAULT, \
  DDS_HISTORY_QOS_POLICY_DEFAULT, \
  DDS_RESOURCE_LIMITS_QOS_POLICY_DEFAULT, \
  DDS_OWNERSHIP_QOS_POLICY_DEFAULT, \
  DDS_TOPIC_DATA_QOS_POLICY_DEFAULT }


DDSC_VARIABLE_LENGTH_VALUE_TYPE_SUPPORT(DDS_PublicationBuiltinTopicData);

struct DDS_PublicationBuiltinTopicData {

    /*e \dref_PublicationBuiltinTopicData_key
      */
    DDS_BuiltinTopicKey_t key;

    /*e \dref_PublicationBuiltinTopicData_participant_key
      */
    DDS_BuiltinTopicKey_t participant_key;

    /*e \dref_PublicationBuiltinTopicData_topic_name
     */
    char* topic_name;

    /*e \dref_PublicationBuiltinTopicData_type_name
     */
    char* type_name;

    /*i \dref_PublicationBuiltinTopicData_max_sample_serialized_size 
     * If making this field externally documented, add it to the print function
    */
    int max_sample_serialized_size;

    /*e \dref_PublicationBuiltinTopicData_durability
     */
    struct DDS_DurabilityQosPolicy durability;

    /*e \dref_PublicationBuiltinTopicData_durability_service
     */
    struct DDS_DurabilityServiceQosPolicy durability_service;

    /*e \dref_PublicationBuiltinTopicData_deadline
     */
    struct DDS_DeadlineQosPolicy deadline;

    /*e \dref_PublicationBuiltinTopicData_latency_budget
     */
    struct DDS_LatencyBudgetQosPolicy latency_budget;

    /*e \dref_PublicationBuiltinTopicData_liveliness
     */
    struct DDS_LivelinessQosPolicy liveliness;

    /*e \dref_PublicationBuiltinTopicData_reliability
     */
    struct DDS_ReliabilityQosPolicy reliability;

    /*e \dref_PublicationBuiltinTopicData_lifespan
     */
    struct DDS_LifespanQosPolicy lifespan;

    /*e \dref_PublicationBuiltinTopicData_user_data
     */
    struct DDS_UserDataQosPolicy user_data;

    /*e \dref_PublicationBuiltinTopicData_ownership
     */
    struct DDS_OwnershipQosPolicy ownership;

    /*e \dref_PublicationBuiltinTopicData_ownership_strength
     */
    struct DDS_OwnershipStrengthQosPolicy ownership_strength;

    /*e \dref_PublicationBuiltinTopicData_destination_order
     */
    struct DDS_DestinationOrderQosPolicy destination_order;

    /*e \dref_PublicationBuiltinTopicData_presentation
     */
    struct DDS_PresentationQosPolicy presentation;

    /*e \dref_PublicationBuiltinTopicData_partition
     */
    struct DDS_PartitionQosPolicy partition;

    /*e \dref_PublicationBuiltinTopicData_topic_data
     */
    struct DDS_TopicDataQosPolicy topic_data;

    /*e \dref_PublicationBuiltinTopicData_group_data
     */
    struct DDS_GroupDataQosPolicy group_data;

    /* --- Extensions: ---------------------------------------------------- */
    
    /*e \dref_PublicationBuiltinTopicData_type_code
    */
    struct DDS_TypeCode * type_code;

    /*e \dref_PublicationBuiltinTopicData_publisher_key
      */
    DDS_BuiltinTopicKey_t publisher_key;

    /*e \dref_PublicationBuiltinTopicData_property
     */
    struct DDS_PropertyQosPolicy property;

    /*e \dref_PublicationBuiltinTopicData_unicast_locators
     */
    struct DDS_LocatorSeq unicast_locators;

    /*e \dref_PublicationBuiltinTopicData_virtual_guid
     */
    struct DDS_GUID_t virtual_guid;

    /*i \dref_PublicationBuiltinTopicData_service 
     * If making this field externally documented, add it to the print function
     */
    struct DDS_ServiceQosPolicy service;

    /*e \dref_PublicationBuiltinTopicData_rtps_protocol_version
     */
    DDS_ProtocolVersion_t rtps_protocol_version;

    /*e \dref_PublicationBuiltinTopicData_rtps_vendor_id
     */
    struct DDS_VendorId_t rtps_vendor_id;

    /*e \dref_PublicationBuiltinTopicData_product_version
     */
    struct DDS_ProductVersion_t product_version;

#ifdef __cplusplus
    DDS_PublicationBuiltinTopicData() { topic_name = NULL; type_name = NULL; type_code = NULL;}
    ~DDS_PublicationBuiltinTopicData() {
	DDS_PublicationBuiltinTopicData_finalize(this);
    }
    struct DDS_PublicationBuiltinTopicData& operator=(
	const struct DDS_PublicationBuiltinTopicData& from) {
        DDS_PublicationBuiltinTopicData_copy(this, &from);
	return *this;
    }
#endif /* __cplusplus */
};


#define DDS_PublicationBuiltinTopicData_INITIALIZER \
{ DDS_BuiltinTopicKey_t_INITIALIZER, \
  DDS_BuiltinTopicKey_t_INITIALIZER, \
  NULL, NULL,0, \
  DDS_DURABILITY_QOS_POLICY_DEFAULT, \
  DDS_DURABILITY_SERVICE_QOS_POLICY_DEFAULT, \
  DDS_DEADLINE_QOS_POLICY_DEFAULT, \
  DDS_LATENCY_BUDGET_QOS_POLICY_DEFAULT, \
  DDS_LIVELINESS_QOS_POLICY_DEFAULT, \
  DDS_RELIABILITY_QOS_POLICY_DEFAULT, \
  DDS_LIFESPAN_QOS_POLICY_DEFAULT, \
  DDS_USER_DATA_QOS_POLICY_DEFAULT, \
  DDS_OWNERSHIP_QOS_POLICY_DEFAULT, \
  DDS_OWNERSHIP_STRENGTH_QOS_POLICY_DEFAULT, \
  DDS_DESTINATION_ORDER_QOS_POLICY_DEFAULT, \
  DDS_PRESENTATION_QOS_POLICY_DEFAULT, \
  DDS_PARTITION_QOS_POLICY_DEFAULT, \
  DDS_TOPIC_DATA_QOS_POLICY_DEFAULT, \
  DDS_GROUP_DATA_QOS_POLICY_DEFAULT,\
  NULL, \
  DDS_BuiltinTopicKey_t_INITIALIZER, \
  DDS_PROPERTY_QOS_POLICY_DEFAULT , \
  DDS_SEQUENCE_INITIALIZER,         \
  {{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0}}, \
  DDS_SERVICE_QOS_POLICY_DEFAULT, \
  DDS_PROTOCOL_VERSION_DEFAULT, \
  DDS_VENDOR_ID_DEFAULT, \
  DDS_PRODUCTVERSION_UNKNOWN}


DDSC_VARIABLE_LENGTH_VALUE_TYPE_SUPPORT(DDS_SubscriptionBuiltinTopicData);

struct DDS_SubscriptionBuiltinTopicData {

    /*e \dref_SubscriptionBuiltinTopicData_key
     */
    DDS_BuiltinTopicKey_t key;

    /*e \dref_SubscriptionBuiltinTopicData_participant_key
     */
    DDS_BuiltinTopicKey_t participant_key;

    /*e \dref_SubscriptionBuiltinTopicData_topic_name
     */
    char* topic_name;

    /*e \dref_SubscriptionBuiltinTopicData_type_name
     */
    char* type_name;

    /*e \dref_SubscriptionBuiltinTopicData_durability
     */
    struct DDS_DurabilityQosPolicy durability;

    /*e \dref_SubscriptionBuiltinTopicData_deadline
     */
    struct DDS_DeadlineQosPolicy deadline;

    /*e \dref_SubscriptionBuiltinTopicData_latency_budget
     */
    struct DDS_LatencyBudgetQosPolicy latency_budget;

    /*e \dref_SubscriptionBuiltinTopicData_liveliness
     */
    struct DDS_LivelinessQosPolicy liveliness;

    /*e \dref_SubscriptionBuiltinTopicData_reliability
     */
    struct DDS_ReliabilityQosPolicy reliability;

    /*e \dref_SubscriptionBuiltinTopicData_ownership
     */
    struct DDS_OwnershipQosPolicy ownership;

    /*e \dref_SubscriptionBuiltinTopicData_destination_order
     */
    struct DDS_DestinationOrderQosPolicy destination_order;

    /*e \dref_SubscriptionBuiltinTopicData_user_data
     */
    struct DDS_UserDataQosPolicy user_data;

    /*e \dref_SubscriptionBuiltinTopicData_time_based_filter
     */
    struct DDS_TimeBasedFilterQosPolicy time_based_filter;

    /*e \dref_SubscriptionBuiltinTopicData_presentation
     */
    struct DDS_PresentationQosPolicy presentation;

    /*e \dref_SubscriptionBuiltinTopicData_partition
     */
    struct DDS_PartitionQosPolicy partition;

    /*e \dref_SubscriptionBuiltinTopicData_topic_data
     */
    struct DDS_TopicDataQosPolicy topic_data;

    /*e \dref_SubscriptionBuiltinTopicData_group_data
     */
    struct DDS_GroupDataQosPolicy group_data;

    /* --- Extensions: ---------------------------------------------------- */
    
    /*e \dref_SubscriptionBuiltinTopicData_type_code
    */
    struct DDS_TypeCode * type_code;

    /*e \dref_SubscriptionBuiltinTopicData_subscriber_key
     */
    DDS_BuiltinTopicKey_t subscriber_key;

    /*e \dref_SubscriptionBuiltinTopicData_property
     */
    struct DDS_PropertyQosPolicy property;
    
    /*e \dref_SubscriptionBuiltinTopicData_unicast_locators
     */
    struct DDS_LocatorSeq unicast_locators;

    /*e \dref_SubscriptionBuiltinTopicData_multicast_locators
     */
    struct DDS_LocatorSeq multicast_locators;

    /*e \dref_SubscriptionBuiltinTopicData_content_filter_property
     */
    struct DDS_ContentFilterProperty_t content_filter_property;

    /*e \dref_SubscriptionBuiltinTopicData_virtual_guid
     */
    struct DDS_GUID_t virtual_guid;

    /*i \dref_SubscriptionBuiltinTopicData_service 
     * If making this field externally documented, add it to the print function
     */
    struct DDS_ServiceQosPolicy service;

    /*e \dref_SubscriptionBuiltinTopicData_rtps_protocol_version
     */
    DDS_ProtocolVersion_t rtps_protocol_version;

    /*e \dref_SubscriptionBuiltinTopicData_rtps_vendor_id
     */
    struct DDS_VendorId_t rtps_vendor_id;

    /*e \dref_SubscriptionBuiltinTopicData_product_version
     */
    struct DDS_ProductVersion_t product_version;

#ifdef __cplusplus
    DDS_SubscriptionBuiltinTopicData() { topic_name = NULL; type_name = NULL; type_code=NULL;}
    ~DDS_SubscriptionBuiltinTopicData() {
	DDS_SubscriptionBuiltinTopicData_finalize(this);
    }
    struct DDS_SubscriptionBuiltinTopicData& operator=(
	const struct DDS_SubscriptionBuiltinTopicData& from) {
        DDS_SubscriptionBuiltinTopicData_copy(this, &from);
	return *this;
    }
#endif /* __cplusplus */
};


#define DDS_SubscriptionBuiltinTopicData_INITIALIZER \
{ DDS_BuiltinTopicKey_t_INITIALIZER, \
  DDS_BuiltinTopicKey_t_INITIALIZER, \
  NULL, NULL, \
  DDS_DURABILITY_QOS_POLICY_DEFAULT, \
  DDS_DEADLINE_QOS_POLICY_DEFAULT, \
  DDS_LATENCY_BUDGET_QOS_POLICY_DEFAULT, \
  DDS_LIVELINESS_QOS_POLICY_DEFAULT, \
  DDS_RELIABILITY_QOS_POLICY_DEFAULT, \
  DDS_OWNERSHIP_QOS_POLICY_DEFAULT, \
  DDS_DESTINATION_ORDER_QOS_POLICY_DEFAULT, \
  DDS_USER_DATA_QOS_POLICY_DEFAULT, \
  DDS_TIME_BASED_FILTER_QOS_POLICY_DEFAULT, \
  DDS_PRESENTATION_QOS_POLICY_DEFAULT, \
  DDS_PARTITION_QOS_POLICY_DEFAULT, \
  DDS_TOPIC_DATA_QOS_POLICY_DEFAULT, \
  DDS_GROUP_DATA_QOS_POLICY_DEFAULT,\
  NULL, \
  DDS_BuiltinTopicKey_t_INITIALIZER, \
  DDS_PROPERTY_QOS_POLICY_DEFAULT, \
  DDS_SEQUENCE_INITIALIZER, \
  DDS_SEQUENCE_INITIALIZER, \
  DDS_CONTENT_FILTER_PROPERTY_DEFAULT, \
  {{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0}}, \
  DDS_SERVICE_QOS_POLICY_DEFAULT, \
  DDS_PROTOCOL_VERSION_DEFAULT, \
  DDS_VENDOR_ID_DEFAULT, \
  DDS_PRODUCTVERSION_UNKNOWN \
  }


DDS_SEQUENCE(DDS_ParticipantBuiltinTopicDataSeq, struct DDS_ParticipantBuiltinTopicData);


DDS_TYPESUPPORT_C(DDS_ParticipantBuiltinTopicDataTypeSupport, struct DDS_ParticipantBuiltinTopicData);


DDS_DATAREADER_C(DDS_ParticipantBuiltinTopicDataDataReader, DDS_ParticipantBuiltinTopicDataSeq, struct DDS_ParticipantBuiltinTopicData);

 extern DDSCDllVariable const char *DDS_PARTICIPANT_TOPIC_NAME;


DDS_SEQUENCE(DDS_TopicBuiltinTopicDataSeq, struct DDS_TopicBuiltinTopicData);


DDS_TYPESUPPORT_C(DDS_TopicBuiltinTopicDataTypeSupport, struct DDS_TopicBuiltinTopicData);


DDS_DATAREADER_C(DDS_TopicBuiltinTopicDataDataReader, DDS_TopicBuiltinTopicDataSeq, struct DDS_TopicBuiltinTopicData);

 extern DDSCDllVariable const char *DDS_TOPIC_TOPIC_NAME;


DDS_SEQUENCE(DDS_PublicationBuiltinTopicDataSeq, struct DDS_PublicationBuiltinTopicData);


DDS_TYPESUPPORT_C(DDS_PublicationBuiltinTopicDataTypeSupport, struct DDS_PublicationBuiltinTopicData);


DDS_DATAREADER_C(DDS_PublicationBuiltinTopicDataDataReader, DDS_PublicationBuiltinTopicDataSeq, struct DDS_PublicationBuiltinTopicData);

 extern DDSCDllVariable const char *DDS_PUBLICATION_TOPIC_NAME;


DDS_SEQUENCE(DDS_SubscriptionBuiltinTopicDataSeq, struct DDS_SubscriptionBuiltinTopicData);


DDS_TYPESUPPORT_C(DDS_SubscriptionBuiltinTopicDataTypeSupport, struct DDS_SubscriptionBuiltinTopicData);


DDS_DATAREADER_C(DDS_SubscriptionBuiltinTopicDataDataReader, DDS_SubscriptionBuiltinTopicDataSeq, struct DDS_SubscriptionBuiltinTopicData);

 extern DDSCDllVariable const char *DDS_SUBSCRIPTION_TOPIC_NAME;


struct DDS_ParticipantBuiltinTopicDataDataPool {
    struct PRESTypePluginDataPool _super;

    struct REDAFastBufferPool *_samplePool;
    struct REDAFastBufferPool *_userDataPool;
    struct REDAFastBufferPool *_propertyPool;
    struct REDAFastBufferPool *_keyPool;
    struct REDAFastBufferPool *_defaultUnicastLocatorsPool;
    struct REDAFastBufferPool *_participantNamePool;

    int _propertyListMaximumLength;
    int _propertyStringMaximumLength;
};


#if defined(RTI_WIN32) || defined(RTI_WINCE)
/* resume default settings
 */
#pragma warning(default:4190)
#endif /* RTI_WIN32 || RTI_WINCE */


#ifdef __cplusplus
    }	/* extern "C" */
#endif

#endif /* dds_c_builtin_h */
