/*
 * @(#)dds_c_typecode.h    generated by: makeheader    Mon Dec  3 23:08:27 2007
 *
 *		built from:	typecode.ifc
 */

#ifndef dds_c_typecode_h
#define dds_c_typecode_h


#include "dds_c/dds_c_common.h"
#include "dds_c/dds_c_infrastructure.h"

#ifndef cdr_typeCode_h
  #include "cdr/cdr_typeCode.h"
#endif

#ifndef dds_c_sequence_h
  #include "dds_c/dds_c_sequence.h"
#endif

#ifdef __cplusplus
    extern "C" {
#endif


typedef enum {
    /*e \dref_TCKind_TK_NULL
     */
    DDS_TK_NULL,

    /*e \dref_TCKind_TK_SHORT
     */    
    DDS_TK_SHORT, 

    /*e \dref_TCKind_TK_LONG
     */    
    DDS_TK_LONG, 
    
    /*e \dref_TCKind_TK_USHORT
     */    
    DDS_TK_USHORT,
    
    /*e \dref_TCKind_TK_ULONG
     */        
    DDS_TK_ULONG,
    
    /*e \dref_TCKind_TK_FLOAT
     */        
    DDS_TK_FLOAT,
    
    /*e \dref_TCKind_TK_DOUBLE
     */        
    DDS_TK_DOUBLE,
    
    /*e \dref_TCKind_TK_BOOLEAN
     */        
    DDS_TK_BOOLEAN,
    
    /*e \dref_TCKind_TK_CHAR
     */
    DDS_TK_CHAR,
    
    /*e \dref_TCKind_TK_OCTET
     */        
    DDS_TK_OCTET,
    
    /*e \dref_TCKind_TK_STRUCT
     */        
    DDS_TK_STRUCT,
    
    /*e \dref_TCKind_TK_UNION
     */        
    DDS_TK_UNION,
    
    /*e \dref_TCKind_TK_ENUM
     */        
    DDS_TK_ENUM,
    
    /*e \dref_TCKind_TK_STRING
     */        
    DDS_TK_STRING,
    
    /*e \dref_TCKind_TK_SEQUENCE
     */        
    DDS_TK_SEQUENCE,
    
    /*e \dref_TCKind_TK_ARRAY
     */        
    DDS_TK_ARRAY, 
    
    /*e \dref_TCKind_TK_ALIAS
     */        
    DDS_TK_ALIAS,
    
    /*e \dref_TCKind_TK_LONGLONG
     */        
    DDS_TK_LONGLONG,
    
    /*e \dref_TCKind_TK_ULONGLONG
     */        
    DDS_TK_ULONGLONG,
    
    /*e \dref_TCKind_TK_LONGDOUBLE
     */        
    DDS_TK_LONGDOUBLE,
    
    /*e \dref_TCKind_TK_WCHAR
     */        
    DDS_TK_WCHAR,
    
    /*e \dref_TCKind_TK_WSTRING
     */        
    DDS_TK_WSTRING,

    /*e \dref_TCKind_TK_VALUE
     */
    DDS_TK_VALUE
} DDS_TCKind;

typedef short DDS_ValueModifier;


/*e \dref_VM_NONE
*/
#define DDS_VM_NONE (short)0

/*e \dref_VM_CUSTOM
*/
#define DDS_VM_CUSTOM (short)1

/*e \dref_VM_ABSTRACT
*/
#define DDS_VM_ABSTRACT (short)2

/*e \dref_VM_TRUNCATABLE
*/
#define DDS_VM_TRUNCATABLE (short)3

typedef short DDS_Visibility;


/*e \dref_PRIVATE_MEMBER
*/
#define DDS_PRIVATE_MEMBER (short)0
/*e \dref_PUBLIC_MEMBER
*/
#define DDS_PUBLIC_MEMBER (short)1


#ifdef __cplusplus
#define DDS_TYPECODE_DLL_EXPORT DDSCPPDllExport
#else
#define DDS_TYPECODE_DLL_EXPORT DDSCDllExport
#endif /* __cplusplus */

typedef struct RTICdrTypeCodeMember DDS_TypeCode_Member;


struct DDS_TYPECODE_DLL_EXPORT DDS_TypeCode {
    RTICdrTypeCode _data;
    #ifdef __cplusplus
    /* Methods */
    /*e \dref_TypeCode_get_kind */
    DDS_TCKind kind(DDS_ExceptionCode_t & ex);
    /*e \dref_TypeCode_equal */
    DDS_Boolean equal(DDS_TypeCode * tc,DDS_ExceptionCode_t & ex);
    /*e \dref_TypeCode_get_name */
    const char * name(DDS_ExceptionCode_t & ex);
    /*e \dref_TypeCode_get_member_count */
    DDS_UnsignedLong member_count(DDS_ExceptionCode_t & ex);    
    /*e \dref_TypeCode_get_member_name */
    const char * member_name(DDS_UnsignedLong index,DDS_ExceptionCode_t & ex);
    /*e \dref_TypeCode_get_member_type */
    DDS_TypeCode * member_type(DDS_UnsignedLong index,DDS_ExceptionCode_t & ex);
    /*e \dref_TypeCode_get_member_label_count */
    DDS_UnsignedLong member_label_count(DDS_UnsignedLong index,DDS_ExceptionCode_t & ex);
    /*e \dref_TypeCode_get_member_label */
    DDS_Long member_label(DDS_UnsignedLong member_index,DDS_UnsignedLong label_index,
                          DDS_ExceptionCode_t & ex);                                               
    /*e \dref_TypeCode_get_member_ordinal */
    DDS_Long member_ordinal(DDS_UnsignedLong index,DDS_ExceptionCode_t & ex);    
    /*e \dref_TypeCode_is_member_key */
    DDS_Boolean is_member_key(DDS_UnsignedLong index,DDS_ExceptionCode_t & ex);
    /*e \dref_TypeCode_is_member_pointer */
    DDS_Boolean is_member_pointer(DDS_UnsignedLong index,DDS_ExceptionCode_t & ex);    
    /*e \dref_TypeCode_is_member_bitfield */
    DDS_Boolean is_member_bitfield(DDS_UnsignedLong index,DDS_ExceptionCode_t & ex);    
    /*e \dref_TypeCode_get_member_bitfield_bits */
    DDS_Short member_bitfield_bits(DDS_UnsignedLong index,DDS_ExceptionCode_t & ex);
    /*e \dref_TypeCode_member_visibility */
    DDS_Visibility member_visibility(DDS_UnsignedLong index,DDS_ExceptionCode_t & ex);
    /*e \dref_TypeCode_get_discriminator_type */
    DDS_TypeCode * discriminator_type(DDS_ExceptionCode_t & ex);    
    /*e \dref_TypeCode_get_length */
    DDS_UnsignedLong length(DDS_ExceptionCode_t & ex);    
    /*e \dref_TypeCode_get_array_dimension_count */
    DDS_UnsignedLong array_dimension_count(DDS_ExceptionCode_t & ex);
    /*e \dref_TypeCode_get_array_dimension */
    DDS_UnsignedLong array_dimension(DDS_UnsignedLong index,DDS_ExceptionCode_t & ex);    
    /*e \dref_TypeCode_get_content_type */
    DDS_TypeCode * content_type(DDS_ExceptionCode_t & ex);    
    /*e \dref_TypeCode_is_alias_pointer */
    DDS_Boolean is_alias_pointer(DDS_ExceptionCode_t & ex);        
    /*e \dref_TypeCode_get_default_index */
    DDS_Long default_index(DDS_ExceptionCode_t & ex);                       
    /*e \dref_TypeCode_concrete_base_type */
    DDS_TypeCode * concrete_base_type(DDS_ExceptionCode_t & ex);
    /*e \dref_TypeCode_type_modifier */
    DDS_ValueModifier type_modifier(DDS_ExceptionCode_t & ex);
    /*e \dref_TypeCode_print_IDL */
    void print_IDL(DDS_UnsignedLong indent,DDS_ExceptionCode_t & ex);        
    #endif    
};


typedef struct DDS_TypeCode DDS_TypeCode;


struct DDS_StructMember {
    /*e \dref_StructMember_name */
    char * name;
    /*e \dref_StructMember_type */
    DDS_TypeCode * type;
    /*e \dref_StructMember_is_pointer */
    DDS_Boolean is_pointer;
    /*e \dref_StructMember_bits */
    DDS_Short bits;
    /*e \dref_StructMember_is_key */
    DDS_Boolean is_key;
};


DDS_SEQUENCE(DDS_StructMemberSeq, struct DDS_StructMember);


struct DDS_UnionMember {
    /*e \dref_UnionMember_name */
    char * name;
    /*e \dref_UnionMember_is_pointer */
    DDS_Boolean is_pointer;
    /*e \dref_UnionMember_labels */
    struct DDS_LongSeq labels;
    /*e \dref_UnionMember_type */
    DDS_TypeCode * type;
};


#if defined(RTI_WIN32) || defined(RTI_WINCE)
#pragma warning (disable: 4190)
#endif
DDS_SEQUENCE(DDS_UnionMemberSeq, struct DDS_UnionMember);
#if defined(RTI_WIN32) || defined(RTI_WINCE)
#pragma warning (default: 4190)
#endif


struct DDS_EnumMember {
    /*e \dref_EnumMember_name */
    char * name;
    /*e \dref_EnumMember_ordinal */
    DDS_Long ordinal;
};


DDS_SEQUENCE(DDS_EnumMemberSeq,struct DDS_EnumMember);


struct DDS_ValueMember {
    /*e \dref_ValueMember_name */
    char * name;
    /*e \dref_ValueMember_type */
    DDS_TypeCode * type;
    /*e \dref_ValueMember_is_pointer */
    DDS_Boolean is_pointer;
    /*e \dref_ValueMember_bits */
    DDS_Short bits;
    /*e \dref_ValueMember_is_key */
    DDS_Boolean is_key;
    /*e \dref_ValueMember_access */
    DDS_Visibility access;
};


DDS_SEQUENCE(DDS_ValueMemberSeq, struct DDS_ValueMember);


struct DDS_TYPECODE_DLL_EXPORT DDS_TypeCodeFactory {
    char _dummy; /* Win32 requires at least one field in the structure */
    #ifdef __cplusplus
    /* Methods */
    /*e \dref_TypeCodeFactory_get_instance */
    static DDS_TypeCodeFactory * get_instance();
    /*e \dref_TypeCodeFactory_clone_tc */
    DDS_TypeCode * clone_tc(DDS_TypeCode * tc,DDS_ExceptionCode_t & ex);
    /*e \dref_TypeCodeFactory_delete_tc */
    void delete_tc(DDS_TypeCode * tc,DDS_ExceptionCode_t & ex);
    /*e \dref_TypeCodeFactory_create_struct_tc */
    DDS_TypeCode * create_struct_tc(const char * name,
				    const DDS_StructMemberSeq & members,
				    DDS_ExceptionCode_t & ex);
    /*e \dref_TypeCodeFactory_create_value_tc */
    DDS_TypeCode * create_value_tc(const char * name,
				   DDS_ValueModifier type_modifier,
				   DDS_TypeCode * concrete_base,
				   const DDS_ValueMemberSeq & members,
				   DDS_ExceptionCode_t & ex);
    /*e \dref_TypeCodeFactory_create_union_tc */
    DDS_TypeCode * create_union_tc(const char * name,
				   DDS_TypeCode * discriminator_type,
			           DDS_Long default_index,
				   const DDS_UnionMemberSeq & members,
				   DDS_ExceptionCode_t & ex);
    /*e \dref_TypeCodeFactory_create_enum_tc */
    DDS_TypeCode * create_enum_tc(const char * name,
	                          const DDS_EnumMemberSeq & members,
			          DDS_ExceptionCode_t & ex);
    /*e \dref_TypeCodeFactory_create_alias_tc */
    DDS_TypeCode * create_alias_tc(const char * name,
				   DDS_TypeCode * original_type,
				   DDS_Boolean is_pointer,
				   DDS_ExceptionCode_t & ex);
    /*e \dref_TypeCodeFactory_create_string_tc */
    DDS_TypeCode * create_string_tc(DDS_UnsignedLong bound,
			            DDS_ExceptionCode_t & ex);
    /*e \dref_TypeCodeFactory_create_wstring_tc */
    DDS_TypeCode * create_wstring_tc(DDS_UnsignedLong bound,
				     DDS_ExceptionCode_t & ex);
    /*e \dref_TypeCodeFactory_create_sequence_tc */
    DDS_TypeCode * create_sequence_tc(DDS_UnsignedLong bound,
				      DDS_TypeCode * element_type,
				      DDS_ExceptionCode_t & ex);
    /*e \dref_TypeCodeFactory_create_array_tc */
    DDS_TypeCode * create_array_tc(const DDS_UnsignedLongSeq & dimensions,
				   DDS_TypeCode * element_type,
				   DDS_ExceptionCode_t & ex);
    #endif
};

 
typedef struct DDS_TypeCodeFactory DDS_TypeCodeFactory;


#define DDS_INITIALIZE_PRIMITIVE_TYPECODE(kind)\
    {{kind,DDS_BOOLEAN_FALSE,-1,NULL,NULL,0,0,NULL,0,NULL,DDS_VM_NONE}}
#define DDS_INITIALIZE_STRING_TYPECODE(maximum)\
    {{DDS_TK_STRING,DDS_BOOLEAN_FALSE,-1,NULL,NULL,maximum,0,NULL,0,NULL,DDS_VM_NONE}}
#define DDS_INITIALIZE_WSTRING_TYPECODE(maximum)\
    {{DDS_TK_WSTRING,DDS_BOOLEAN_FALSE,-1,NULL,NULL,maximum,0,NULL,0,NULL,DDS_VM_NONE}}
#define DDS_INITIALIZE_SEQUENCE_TYPECODE(maximum,typecode)\
    {{DDS_TK_SEQUENCE,DDS_BOOLEAN_FALSE,-1,NULL,typecode,maximum,0,NULL,0,NULL,DDS_VM_NONE}}
#define DDS_INITIALIZE_ARRAY_TYPECODE(dimensionsCount,dimension_1,dimensions,typecode)\
    {{DDS_TK_ARRAY,DDS_BOOLEAN_FALSE,-1,NULL,typecode,dimension_1,dimensionsCount,dimensions,0,NULL,DDS_VM_NONE}}
#define DDS_INITIALIZE_ALIAS_TYPECODE(dimension,typecode,pointer)\
    {{DDS_TK_ALIAS,pointer,-1,NULL,typecode,dimension,0,NULL,0,NULL,DDS_VM_NONE}}

extern DDSCDllExport DDS_TCKind DDS_TypeCode_kind(DDS_TypeCode * self,
                                                  DDS_ExceptionCode_t * ex);

extern DDSCDllExport DDS_Boolean DDS_TypeCode_equal(DDS_TypeCode * self,
                                                    DDS_TypeCode * tc,
                                                    DDS_ExceptionCode_t * ex);

extern DDSCDllExport const char * DDS_TypeCode_name(DDS_TypeCode * self,
                                                    DDS_ExceptionCode_t * ex);

extern DDSCDllExport DDS_UnsignedLong DDS_TypeCode_member_count(DDS_TypeCode * self,
                                                                DDS_ExceptionCode_t * ex);

extern DDSCDllExport const char * DDS_TypeCode_member_name(DDS_TypeCode * self,
                                                           DDS_UnsignedLong index,
                                                           DDS_ExceptionCode_t * ex);

extern DDSCDllExport DDS_TypeCode * DDS_TypeCode_member_type(DDS_TypeCode * self,
                                                             DDS_UnsignedLong index,
                                                             DDS_ExceptionCode_t * ex);

extern DDSCDllExport DDS_UnsignedLong DDS_TypeCode_member_label_count(DDS_TypeCode * self,
                                                                      DDS_UnsignedLong index,
                                                                      DDS_ExceptionCode_t * ex);

extern DDSCDllExport DDS_Long DDS_TypeCode_member_label(DDS_TypeCode * self,
                                                        DDS_UnsignedLong member_index,
                                                        DDS_UnsignedLong label_index,
                                                        DDS_ExceptionCode_t * ex);

extern DDSCDllExport DDS_Long DDS_TypeCode_member_ordinal(DDS_TypeCode * self,
                                                          DDS_UnsignedLong index,
                                                          DDS_ExceptionCode_t * ex);

extern DDSCDllExport DDS_Boolean DDS_TypeCode_is_member_key(DDS_TypeCode * self,
                                                            DDS_UnsignedLong index,
                                                            DDS_ExceptionCode_t * ex);

extern DDSCDllExport DDS_Boolean DDS_TypeCode_is_member_pointer(DDS_TypeCode * self,
                                                                DDS_UnsignedLong index,
                                                                DDS_ExceptionCode_t * ex);

extern DDSCDllExport DDS_Boolean DDS_TypeCode_is_member_bitfield(DDS_TypeCode * self,
                                                                 DDS_UnsignedLong index,
                                                                 DDS_ExceptionCode_t * ex);

extern DDSCDllExport DDS_Short DDS_TypeCode_member_bitfield_bits(DDS_TypeCode * self,
                                                                 DDS_UnsignedLong index,
                                                                 DDS_ExceptionCode_t * ex);

extern DDSCDllExport DDS_Visibility DDS_TypeCode_member_visibility(DDS_TypeCode * self,
                                                                   DDS_UnsignedLong index,
                                                                   DDS_ExceptionCode_t * ex);

extern DDSCDllExport DDS_TypeCode * DDS_TypeCode_discriminator_type(DDS_TypeCode * self,
                                                                    DDS_ExceptionCode_t * ex);

extern DDSCDllExport DDS_UnsignedLong DDS_TypeCode_length(DDS_TypeCode * self,
                                                          DDS_ExceptionCode_t * ex);

extern DDSCDllExport DDS_UnsignedLong DDS_TypeCode_array_dimension_count(
    DDS_TypeCode * self,
    DDS_ExceptionCode_t * ex);

extern DDSCDllExport DDS_UnsignedLong DDS_TypeCode_array_dimension(DDS_TypeCode * self,
                                                                   DDS_UnsignedLong index,
                                                                   DDS_ExceptionCode_t * ex);

extern DDSCDllExport DDS_TypeCode * DDS_TypeCode_content_type(DDS_TypeCode * self, 
                                                              DDS_ExceptionCode_t * ex);

extern DDSCDllExport DDS_Boolean DDS_TypeCode_is_alias_pointer(DDS_TypeCode * self,
                                                               DDS_ExceptionCode_t * ex);

extern DDSCDllExport DDS_Long DDS_TypeCode_default_index(DDS_TypeCode * self,
                                                         DDS_ExceptionCode_t * ex);

extern DDSCDllExport DDS_TypeCode * DDS_TypeCode_concrete_base_type(DDS_TypeCode * self,
                                                                    DDS_ExceptionCode_t * ex);

extern DDSCDllExport DDS_ValueModifier DDS_TypeCode_type_modifier(DDS_TypeCode * self,
                                                                  DDS_ExceptionCode_t * ex);

extern DDSCDllExport void DDS_TypeCode_print_IDL(DDS_TypeCode * self,DDS_UnsignedLong indent,
                                                 DDS_ExceptionCode_t * ex);

extern DDSCDllExport DDS_TypeCodeFactory * DDS_TypeCodeFactory_get_instance();

extern DDSCDllExport DDS_TypeCode * DDS_TypeCodeFactory_clone_tc(
							DDS_TypeCodeFactory * self,
							DDS_TypeCode * tc,
							DDS_ExceptionCode_t * ex);

extern DDSCDllExport void DDS_TypeCodeFactory_delete_tc(DDS_TypeCodeFactory * self,
							DDS_TypeCode * tc,
							DDS_ExceptionCode_t * ex);

extern DDSCDllExport DDS_TypeCode * DDS_TypeCodeFactory_create_struct_tc(
							DDS_TypeCodeFactory * self,
						        const char * name,
						        const struct DDS_StructMemberSeq * members,
						        DDS_ExceptionCode_t * ex);

extern DDSCDllExport DDS_TypeCode * DDS_TypeCodeFactory_create_value_tc(
							DDS_TypeCodeFactory * self,
						        const char * name,
							DDS_ValueModifier type_modifier,
							DDS_TypeCode * concrete_base,
						        const struct DDS_ValueMemberSeq * members,
						        DDS_ExceptionCode_t * ex);

extern DDSCDllExport DDS_TypeCode * DDS_TypeCodeFactory_create_union_tc(
						   DDS_TypeCodeFactory * self,
						   const char * name,
						   DDS_TypeCode * discriminator_type,
						   DDS_Long default_index,
						   const struct DDS_UnionMemberSeq * members,
						   DDS_ExceptionCode_t * ex);

extern DDSCDllExport DDS_TypeCode * DDS_TypeCodeFactory_create_enum_tc(
						  DDS_TypeCodeFactory * self,
						  const char * name,
					          const struct DDS_EnumMemberSeq * members,
						  DDS_ExceptionCode_t * ex);

extern DDSCDllExport DDS_TypeCode * DDS_TypeCodeFactory_create_alias_tc(
                                                   DDS_TypeCodeFactory * self,
						   const char * name,
						   DDS_TypeCode * original_type,
						   DDS_Boolean is_pointer,
						   DDS_ExceptionCode_t * ex);

extern DDSCDllExport DDS_TypeCode * DDS_TypeCodeFactory_create_string_tc(
                                                    DDS_TypeCodeFactory * self,
						    DDS_UnsignedLong bound,
						    DDS_ExceptionCode_t * ex);

extern DDSCDllExport DDS_TypeCode * DDS_TypeCodeFactory_create_wstring_tc(
                                                    DDS_TypeCodeFactory * self,
						    DDS_UnsignedLong bound,
						    DDS_ExceptionCode_t * ex);

extern DDSCDllExport DDS_TypeCode * DDS_TypeCodeFactory_create_sequence_tc(
						    DDS_TypeCodeFactory * self,
						    DDS_UnsignedLong bound,
						    DDS_TypeCode * element_type,
						    DDS_ExceptionCode_t * ex);

extern DDSCDllExport DDS_TypeCode * DDS_TypeCodeFactory_create_array_tc(
                                                   DDS_TypeCodeFactory * self,
						   const struct DDS_UnsignedLongSeq * dimensions,
						   DDS_TypeCode * element_type,
						   DDS_ExceptionCode_t * ex);

extern DDSCDllVariable DDS_TypeCode DDS_g_tc_null;

extern DDSCDllVariable DDS_TypeCode DDS_g_tc_short;

extern DDSCDllVariable DDS_TypeCode DDS_g_tc_long;

extern DDSCDllVariable DDS_TypeCode DDS_g_tc_ushort;

extern DDSCDllVariable DDS_TypeCode DDS_g_tc_ulong;

extern DDSCDllVariable DDS_TypeCode DDS_g_tc_float;

extern DDSCDllVariable DDS_TypeCode DDS_g_tc_double;

extern DDSCDllVariable DDS_TypeCode DDS_g_tc_boolean;

extern DDSCDllVariable DDS_TypeCode DDS_g_tc_char;

extern DDSCDllVariable DDS_TypeCode DDS_g_tc_octet;

extern DDSCDllVariable DDS_TypeCode DDS_g_tc_longlong;

extern DDSCDllVariable DDS_TypeCode DDS_g_tc_ulonglong;

extern DDSCDllVariable DDS_TypeCode DDS_g_tc_longdouble;

extern DDSCDllVariable DDS_TypeCode DDS_g_tc_wchar;


#ifdef __cplusplus
    }	/* extern "C" */
#endif

#endif /* dds_c_typecode_h */
