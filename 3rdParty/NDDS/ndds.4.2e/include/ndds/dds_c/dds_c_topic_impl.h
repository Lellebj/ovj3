/*
 * @(#)dds_c_topic_impl.h    generated by: makeheader    Mon Dec  3 23:08:26 2007
 *
 *		built from:	topic_impl.ifc
 */

#ifndef dds_c_topic_impl_h
#define dds_c_topic_impl_h


  #ifndef dds_c_infrastructure_h
    #include "dds_c/dds_c_infrastructure.h"
  #endif
  #ifndef dds_c_domain_h
    #include "dds_c/dds_c_domain.h"
  #endif
  #ifndef dds_c_topic_h
    #include "dds_c/dds_c_topic.h"
  #endif
  #ifndef dds_c_publication_h
    #include "dds_c/dds_c_publication.h"
  #endif
  #ifndef dds_c_subscription_h
    #include "dds_c/dds_c_subscription.h"
  #endif
  #ifndef dds_c_dll_h
    #include "dds_c/dds_c_dll.h"
  #endif

#ifdef __cplusplus
    extern "C" {
#endif

extern DDSCDllExport void* DDS_TopicDescription_get_user_objectI(
    DDS_TopicDescription* self);

/* ------------------------------------------------------------------
 * Type Declarations
 * ------------------------------------------------------------------ */

typedef struct DDS_DataTypeUtilityImpl DDS_DataTypeUtility;

typedef DDS_DataWriter* (*DDS_DataTypeUtility_CreateWriterFn)(
        DDS_DataTypeUtility* self, DDS_Publisher* publisher,
        DDS_Topic* topic, const struct DDS_DataWriterQos* qos,
        const struct DDS_DataWriterListener* listener);

typedef DDS_ReturnCode_t (*DDS_DataTypeUtility_DestroyWriterFn)(
        DDS_DataTypeUtility* self, DDS_DataWriter* writer);

typedef DDS_DataReader* (*DDS_DataTypeUtility_CreateReaderFn)(
        DDS_DataTypeUtility* self, DDS_Subscriber* subscriber,
        DDS_TopicDescription* topic,
        const struct DDS_DataReaderQos* qos,
        const struct DDS_DataReaderListener* listener);

typedef DDS_ReturnCode_t (*DDS_DataTypeUtility_DestroyReaderFn)(
        DDS_DataTypeUtility* self, DDS_DataReader* reader);

struct PRESTypePlugin;

extern DDSCDllExport DDS_DataTypeUtility* DDS_DataTypeUtility_createI(
    struct PRESTypePlugin* presTypePlugin,
    const char* name);

extern DDSCDllExport void DDS_DataTypeUtility_deleteI(
	DDS_DataTypeUtility *self);

extern DDSCDllExport DDS_DataWriter* DDS_DataTypeUtility_create_writerI(
    DDS_DataTypeUtility* self, DDS_Publisher* publisher,
    DDS_Topic* topic, const struct DDS_DataWriterQos* qos,
    const struct DDS_DataWriterListener* listener);

extern DDSCDllExport DDS_ReturnCode_t DDS_DataTypeUtility_destroy_writerI(
    DDS_DataTypeUtility* self, DDS_DataWriter* writer);

extern DDSCDllExport DDS_DataReader* DDS_DataTypeUtility_create_readerI(
    DDS_DataTypeUtility* self, DDS_Subscriber* subscriber,
    DDS_TopicDescription* topic,
    const struct DDS_DataReaderQos* qos,
    const struct DDS_DataReaderListener* listener);

extern DDSCDllExport DDS_ReturnCode_t DDS_DataTypeUtility_destroy_readerI(
    DDS_DataTypeUtility* self, DDS_DataReader* reader);

extern DDSCDllExport DDS_ReturnCode_t DDS_DataTypeUtility_register_typeI(
    DDS_DataTypeUtility* self,
    DDS_DomainParticipant* particpiant,
    const char* type_name);

extern DDSCDllExport const char* DDS_DataTypeUtility_type_nameI(
    DDS_DataTypeUtility* self);

extern DDSCDllExport void* DDS_DataTypeUtility_create_dataI(
    DDS_DataTypeUtility* self);

extern DDSCDllExport void* DDS_DataTypeUtility_create_data_exI(
    DDS_DataTypeUtility* self,RTIBool allocatePointers);

extern DDSCDllExport DDS_ReturnCode_t DDS_DataTypeUtility_destroy_dataI(
    DDS_DataTypeUtility* self, void *data);

extern DDSCDllExport DDS_ReturnCode_t DDS_DataTypeUtility_destroy_data_exI(
    DDS_DataTypeUtility* self, void *data,RTIBool deletePointers);

extern DDSCDllExport DDS_ReturnCode_t DDS_DataTypeUtility_copy_dataI(
    DDS_DataTypeUtility* self, void *dst, const void *src);

extern DDSCDllExport DDS_ReturnCode_t DDS_DataTypeUtility_initialize_dataI(
    DDS_DataTypeUtility* self, void *data);

extern DDSCDllExport DDS_ReturnCode_t DDS_DataTypeUtility_initialize_data_exI(
    DDS_DataTypeUtility* self, void *data,RTIBool allocatePointers);

extern DDSCDllExport DDS_ReturnCode_t DDS_DataTypeUtility_finalize_dataI(
    DDS_DataTypeUtility* self, void *data);

extern DDSCDllExport DDS_ReturnCode_t DDS_DataTypeUtility_finalize_data_exI(
    DDS_DataTypeUtility* self, void *data,RTIBool deletePointers);

extern DDSCDllExport void DDS_DataTypeUtility_print_dataI(
    DDS_DataTypeUtility* self,
    const void *data);

extern DDSCDllExport void* DDS_DataTypeUtility_get_user_dataI(
    DDS_DataTypeUtility* self);

extern DDSCDllExport void DDS_DataTypeUtility_set_user_dataI(
    DDS_DataTypeUtility* self,
    void* userData);

struct PRESTypePlugin;

extern DDSCDllExport struct PRESTypePlugin* 
DDS_DataTypeUtility_get_type_pluginI(
    const DDS_DataTypeUtility* self);

extern DDSCDllExport void* 
DDS_ContentFilteredTopic_get_user_dataI(DDS_ContentFilteredTopic*);

/*i @ingroup DDSTopicEntityModule
 */
extern DDSCDllExport
void DDS_TopicQos_get_defaultI(struct DDS_TopicQos* self);


#ifdef __cplusplus
    }	/* extern "C" */
#endif

#endif /* dds_c_topic_impl_h */
