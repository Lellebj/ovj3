/*
 * @(#)dds_c_domain.h    generated by: makeheader    Mon Dec  3 23:08:27 2007
 *
 *		built from:	domain.ifc
 */

#ifndef dds_c_domain_h
#define dds_c_domain_h



  #ifndef dds_c_infrastructure_h
    #include "dds_c/dds_c_infrastructure.h"
  #endif
  #ifndef dds_c_topic_h
    #include "dds_c/dds_c_topic.h"
  #endif
  #ifndef dds_c_publication_h
    #include "dds_c/dds_c_publication.h"
  #endif
  #ifndef dds_c_subscription_h
    #include "dds_c/dds_c_subscription.h"
  #endif
  #ifndef dds_c_flowcontroller_h
    #include "dds_c/dds_c_flowcontroller.h"
  #endif
  #ifndef dds_c_dll_h
    #include "dds_c/dds_c_dll.h"
  #endif

#ifdef __cplusplus
    extern "C" {
#endif

typedef DDS_DOMAINID_TYPE_NATIVE     DDS_DomainId_t;

struct DDS_DomainParticipantQos;

struct DDS_PublisherQos;

struct DDS_SubscriberQos;

struct DDS_DataReaderQos;

struct DDS_DataWriterQos;

struct DDS_TopicQos;

struct DDS_DomainParticipantListener;

struct DDS_PublisherListener;

struct DDS_SubscriberListener;

struct DDS_DataReaderListener;

struct DDS_DataWriterListener;

struct DDS_TopicListener;

typedef void* 
    (*DDS_DomainParticipantEntityListener_OnBeforeCreateCallback)(
                DDS_DomainId_t domainId,
                const struct DDS_DomainParticipantQos* qos,
                const struct DDS_DomainParticipantListener* listener,
                DDS_StatusMask mask,
                void *param);

typedef void 
    (*DDS_DomainParticipantEntityListener_OnAfterCreateCallback)(
                            const DDS_DomainParticipant *participant,
                            void *return_param,
                            void *param);

typedef void* 
    (*DDS_DomainParticipantEntityListener_OnBeforeDeleteCallback)(
                const DDS_DomainParticipant *participant,
                void *param);

typedef void 
    (*DDS_DomainParticipantEntityListener_OnAfterDeleteCallback)(
	    const DDS_DomainParticipant *participant,
	    DDS_ReturnCode_t retcode, 
	    void *return_param,
	    void *param);

typedef void* 
    (*DDS_DomainParticipantEntityListener_OnBeforeSetQosCallback)(
	   const DDS_DomainParticipant *participant,
	   const struct DDS_DomainParticipantQos* qos,
	  void *param);

typedef void 
    (*DDS_DomainParticipantEntityListener_OnAfterSetQosCallback)(
	    const DDS_DomainParticipant *participant,
	    DDS_ReturnCode_t retcode, 
	    void *return_param,
	    void *param);

typedef void*
    (*DDS_DomainParticipantEntityListener_OnBeforeDeleteContainedCallback)
       (const DDS_DomainParticipant *participant,
        void *param);

typedef void
    (*DDS_DomainParticipantEntityListener_OnAfterDeleteContainedCallback)
       (const DDS_DomainParticipant *participant,
        DDS_ReturnCode_t retcode, 
        void *return_param,
        void *param);

typedef void* (*DDS_PublisherEntityListener_OnBeforeCreateCallback)(
    const DDS_DomainParticipant *participant,
	const struct DDS_PublisherQos *qos,
	const struct DDS_PublisherListener* listener,
	DDS_StatusMask mask,
	void *param);

typedef void 
    (*DDS_PublisherEntityListener_OnAfterCreateCallback)(
        const DDS_Publisher *publisher,
        void *return_param,
        void *param);

typedef void* (*DDS_PublisherEntityListener_OnBeforeDeleteCallback)(
	const DDS_DomainParticipant *participant,
	const DDS_Publisher *publisher,
	void *param);

typedef void (*DDS_PublisherEntityListener_OnAfterDeleteCallback)(
	const DDS_DomainParticipant *participant,
	const DDS_Publisher *publisher,
	DDS_ReturnCode_t retcode, 
	void *return_param,
	void *param);

typedef void* (*DDS_PublisherEntityListener_OnBeforeSetQosCallback)(
	const DDS_Publisher *publisher,
	const struct DDS_PublisherQos* qos,
	void *param);

typedef void (*DDS_PublisherEntityListener_OnAfterSetQosCallback)(
	const DDS_Publisher *publisher,
	DDS_ReturnCode_t retcode, 
	void *return_param,
	void *param);

typedef void*
    (*DDS_PublisherEntityListener_OnBeforeDeleteContainedCallback)
    (const DDS_Publisher *publisher,
     void *param);

typedef void
    (*DDS_PublisherEntityListener_OnAfterDeleteContainedCallback)
        (const DDS_Publisher *publisher,
         DDS_ReturnCode_t retcode, 
         void *return_param,
         void *param);

typedef void* (*DDS_SubscriberEntityListener_OnBeforeCreateCallback)(
        const DDS_DomainParticipant *participant,
	const struct DDS_SubscriberQos *qos,
	const struct DDS_SubscriberListener* listener,
	DDS_StatusMask mask,
	void *param);

typedef void (*DDS_SubscriberEntityListener_OnAfterCreateCallback)(
	const DDS_Subscriber *subscriber,
	void *return_param,
	void *param);

typedef void* (*DDS_SubscriberEntityListener_OnBeforeDeleteCallback)(
	const DDS_DomainParticipant *participant,
	const DDS_Subscriber *subscriber,
	void *param);

typedef void (*DDS_SubscriberEntityListener_OnAfterDeleteCallback)(
	const DDS_DomainParticipant *participant,
	const DDS_Subscriber *subscriber,
	DDS_ReturnCode_t retcode, 
	void *return_param,
	void *param);

typedef void* (*DDS_SubscriberEntityListener_OnBeforeSetQosCallback)(
	const DDS_Subscriber *subscriber,
	const struct DDS_SubscriberQos* qos,
	void *param);

typedef void (*DDS_SubscriberEntityListener_OnAfterSetQosCallback)(
	const DDS_Subscriber *subscriber,
	DDS_ReturnCode_t retcode, 
	void *return_param,
	void *param);

typedef void*
    (*DDS_SubscriberEntityListener_OnBeforeDeleteContainedCallback)
    (const DDS_Subscriber *subscriber,
     void *param);

typedef void
    (*DDS_SubscriberEntityListener_OnAfterDeleteContainedCallback)
        (const DDS_Subscriber *subscriber,
         DDS_ReturnCode_t retcode, 
         void *return_param,
         void *param);

typedef void* (*DDS_DataWriterEntityListener_OnBeforeCreateCallback)(
        const DDS_Publisher *publisher,
	const DDS_Topic *topic,
	const struct DDS_DataWriterQos *qos,
	const struct DDS_DataWriterListener* listener,
	DDS_StatusMask mask,
	void *param);

typedef void (*DDS_DataWriterEntityListener_OnAfterCreateCallback)(
	const DDS_DataWriter *writer,
	void *return_param,
	void *param);

typedef void* (*DDS_DataWriterEntityListener_OnBeforeDeleteCallback)(
	const DDS_Publisher *publisher,
	const DDS_DataWriter *subscriber,
	void *param);

typedef void (*DDS_DataWriterEntityListener_OnAfterDeleteCallback)(
	const DDS_Publisher *publisher,
	const DDS_DataWriter *writer,
	DDS_ReturnCode_t retcode, 
	void *return_param,
	void *param);

typedef void* (*DDS_DataWriterEntityListener_OnBeforeSetQosCallback)(
	const DDS_DataWriter *writer,
	const struct DDS_DataWriterQos* qos,
	void *param);

typedef void (*DDS_DataWriterEntityListener_OnAfterSetQosCallback)(
	const DDS_DataWriter *writer,
	DDS_ReturnCode_t retcode, 
	void *return_param,
	void *param);

typedef void* (*DDS_DataReaderEntityListener_OnBeforeCreateCallback)(
    const DDS_Subscriber *subscriber,
	const DDS_TopicDescription *topic,
	const struct DDS_DataReaderQos *qos,
	const struct DDS_DataReaderListener* listener,
	DDS_StatusMask mask,
	void *param);

typedef void (*DDS_DataReaderEntityListener_OnAfterCreateCallback)(
	const DDS_DataReader *reader,
	void *return_param,
	void *param);

typedef void* (*DDS_DataReaderEntityListener_OnBeforeDeleteCallback)(
	const DDS_Subscriber *subscriber,
	const DDS_DataReader *reader,
	void *param);

typedef void (*DDS_DataReaderEntityListener_OnAfterDeleteCallback)(
	const DDS_Subscriber *subscriber,
	const DDS_DataReader *reader,
	DDS_ReturnCode_t retcode, 
	void *return_param,
	void *param);

typedef void* (*DDS_DataReaderEntityListener_OnBeforeSetQosCallback)(
	const DDS_DataReader *reader,
	const struct DDS_DataReaderQos* qos,
	void *param);

typedef void (*DDS_DataReaderEntityListener_OnAfterSetQosCallback)(
	const DDS_DataReader *reader,
	DDS_ReturnCode_t retcode, 
	void *return_param,
	void *param);

typedef void* (*DDS_TopicEntityListener_OnBeforeCreateCallback)(
        const DDS_DomainParticipant *participant,
	const char *topic_name,
	const char *type_name,
	const struct DDS_TopicQos *qos,
	const struct DDS_TopicListener* listener,
	DDS_StatusMask mask,
	void *param);

typedef void (*DDS_TopicEntityListener_OnAfterCreateCallback)(
	const DDS_Topic *topic,
	void *return_param,
	void *param);

typedef void* (*DDS_TopicEntityListener_OnBeforeDeleteCallback)(
	const DDS_DomainParticipant *participant,
	const DDS_Topic *topic,
	void *param);

typedef void (*DDS_TopicEntityListener_OnAfterDeleteCallback)(
	const DDS_DomainParticipant *participant,
	const DDS_Topic *topic,
	DDS_ReturnCode_t retcode, 
	void *return_param,
	void *param);

typedef void* (*DDS_TopicEntityListener_OnBeforeSetQosCallback)(
	const DDS_Topic *topic,
	const struct DDS_TopicQos* qos,
	void *param);

typedef void (*DDS_TopicEntityListener_OnAfterSetQosCallback)(
	const DDS_Topic *topic,
	DDS_ReturnCode_t retcode, 
	void *return_param,
	void *param);

typedef void* (*DDS_EntityListener_OnBeforeEnableCallback)(
	const DDS_Entity *self,
	void *param);

typedef void (*DDS_EntityListener_OnAfterEnableCallback)(
	const DDS_Entity *self,
	DDS_ReturnCode_t retcode,
	void *return_param,
	void *param);

struct DDS_DomainParticipantEntityListener {
    
    /*ci dref_DomainParticipantEntityListener_on_before_create
     */
    DDS_DomainParticipantEntityListener_OnBeforeCreateCallback 
	on_before_create;
    
    /*ci dref_DomainParticipantEntityListener_on_after_create
     */
    DDS_DomainParticipantEntityListener_OnAfterCreateCallback 
    on_after_create;
    
    /*ci dref_DomainParticipantEntityListener_on_before_delete
     */
    DDS_DomainParticipantEntityListener_OnBeforeDeleteCallback 
    on_before_delete;
    
    /*ci dref_DomainParticipantEntityListener_on_after_delete
     */
    DDS_DomainParticipantEntityListener_OnAfterDeleteCallback 
    on_after_delete;
    
    /*ci dref_DomainParticipantEntityListener_on_before_set_qos
     */
    DDS_DomainParticipantEntityListener_OnBeforeSetQosCallback 
    on_before_set_qos;
    
    /*ci dref_DomainParticipantEntityListener_on_after_set_qos
     */
    DDS_DomainParticipantEntityListener_OnAfterSetQosCallback 
    on_after_set_qos;
    
    /*ci dref_DomainParticipantEntityListener_on_before_delete_contained
     */
    DDS_DomainParticipantEntityListener_OnBeforeDeleteContainedCallback
    on_before_delete_contained;
    
    /*ci dref_DomainParticipantEntityListener_on_after_delete_contained
     */
    DDS_DomainParticipantEntityListener_OnAfterDeleteContainedCallback
    on_after_delete_contained;    
};

struct DDS_TopicEntityListener {
    /*ci dref_TopicEntityListener_on_before_create
     */
    DDS_TopicEntityListener_OnBeforeCreateCallback 
	on_before_create;
    
    /*ci dref_TopicEntityListener_on_after_create
     */
    DDS_TopicEntityListener_OnAfterCreateCallback 
    on_after_create;
    
    /*ci dref_TopicEntityListener_on_before_delete
     */
    DDS_TopicEntityListener_OnBeforeDeleteCallback 
    on_before_delete;
    
    /*ci dref_TopicEntityListener_on_after_delete
     */
    DDS_TopicEntityListener_OnAfterDeleteCallback 
    on_after_delete;
    
    /*ci dref_TopicEntityListener_on_before_set_qos
     */
    DDS_TopicEntityListener_OnBeforeSetQosCallback 
    on_before_set_qos;
    
    /*ci dref_TopicEntityListener_on_after_set_qos
     */
    DDS_TopicEntityListener_OnAfterSetQosCallback 
    on_after_set_qos;    
};

struct DDS_PublisherEntityListener {
    /*ci dref_PublisherEntityListener_on_before_create
     */
    DDS_PublisherEntityListener_OnBeforeCreateCallback 
	on_before_create;
    
    /*ci dref_PublisherEntityListener_on_after_create
     */
    DDS_PublisherEntityListener_OnAfterCreateCallback 
    on_after_create;
    
    /*ci dref_PublisherEntityListener_on_before_delete
     */
    DDS_PublisherEntityListener_OnBeforeDeleteCallback 
    on_before_delete;
    
    /*ci dref_PublisherEntityListener_on_after_delete
     */
    DDS_PublisherEntityListener_OnAfterDeleteCallback 
    on_after_delete;
    
    /*ci dref_PublisherEntityListener_on_before_set_qos
     */
    DDS_PublisherEntityListener_OnBeforeSetQosCallback 
    on_before_set_qos;
    
    /*ci dref_PublisherEntityListener_on_after_set_qos
     */
    DDS_PublisherEntityListener_OnAfterSetQosCallback 
    on_after_set_qos;
    
    /*ci dref_PublisherEntityListener_on_before_delete_contained
     */
    DDS_PublisherEntityListener_OnBeforeDeleteContainedCallback
    on_before_delete_contained;
    
    /*ci dref_PublisherEntityListener_on_after_delete_contained
     */
    DDS_PublisherEntityListener_OnAfterDeleteContainedCallback
    on_after_delete_contained;    
};

struct DDS_SubscriberEntityListener {
    /*ci dref_SubscriberEntityListener_on_before_create
     */
    DDS_SubscriberEntityListener_OnBeforeCreateCallback 
	on_before_create;
    
    /*ci dref_SubscriberEntityListener_on_after_create
     */
    DDS_SubscriberEntityListener_OnAfterCreateCallback 
    on_after_create;
    
    /*ci dref_SubscriberEntityListener_on_before_delete
     */
    DDS_SubscriberEntityListener_OnBeforeDeleteCallback 
    on_before_delete;
    
    /*ci dref_SubscriberEntityListener_on_after_delete
     */
    DDS_SubscriberEntityListener_OnAfterDeleteCallback 
    on_after_delete;
    
    /*ci dref_SubscriberEntityListener_on_before_set_qos
     */
    DDS_SubscriberEntityListener_OnBeforeSetQosCallback 
    on_before_set_qos;
    
    /*ci dref_SubscriberEntityListener_on_after_set_qos
     */
    DDS_SubscriberEntityListener_OnAfterSetQosCallback 
    on_after_set_qos;
    
    /*ci dref_SubscriberEntityListener_on_before_delete_contained
     */
    DDS_SubscriberEntityListener_OnBeforeDeleteContainedCallback
    on_before_delete_contained;
    
    /*ci dref_SubscriberEntityListener_on_after_delete_contained
     */
    DDS_SubscriberEntityListener_OnAfterDeleteContainedCallback
    on_after_delete_contained;    
};

struct DDS_DataReaderEntityListener {
    /*ci dref_DataReaderEntityListener_on_before_create
     */
    DDS_DataReaderEntityListener_OnBeforeCreateCallback 
	on_before_create;
    
    /*ci dref_DataReaderEntityListener_on_after_create
     */
    DDS_DataReaderEntityListener_OnAfterCreateCallback 
    on_after_create;
    
    /*ci dref_DataReaderEntityListener_on_before_delete
     */
    DDS_DataReaderEntityListener_OnBeforeDeleteCallback 
    on_before_delete;
    
    /*ci dref_DataReaderEntityListener_on_after_delete
     */
    DDS_DataReaderEntityListener_OnAfterDeleteCallback 
    on_after_delete;
    
    /*ci dref_DataReaderEntityListener_on_before_set_qos
     */
    DDS_DataReaderEntityListener_OnBeforeSetQosCallback 
    on_before_set_qos;
    
    /*ci dref_DataReaderEntityListener_on_after_set_qos
     */
    DDS_DataReaderEntityListener_OnAfterSetQosCallback 
    on_after_set_qos;    
};

struct DDS_DataWriterEntityListener {
    /*ci dref_DataWriterEntityListener_on_before_create
     */
    DDS_DataWriterEntityListener_OnBeforeCreateCallback 
	on_before_create;
    
    /*ci dref_DataWriterEntityListener_on_after_create;
     */
    DDS_DataWriterEntityListener_OnAfterCreateCallback 
    on_after_create;
    
    /*ci dref_DataWriterEntityListener_on_before_delete;
     */
    DDS_DataWriterEntityListener_OnBeforeDeleteCallback 
    on_before_delete;
    
    /*ci dref_DataWriterEntityListener_on_after_delete
     */
    DDS_DataWriterEntityListener_OnAfterDeleteCallback 
    on_after_delete;
    
    /*ci dref_DataWriterEntityListener_on_before_set_qos
     */
    DDS_DataWriterEntityListener_OnBeforeSetQosCallback 
    on_before_set_qos;
    
    /*ci dref_DataWriterEntityListener_on_after_set_qos
     */
    DDS_DataWriterEntityListener_OnAfterSetQosCallback 
    on_after_set_qos;    
};

struct DDS_EntityListener {
    /*ci dref_EntityListener_on_before_enable
    */
    DDS_EntityListener_OnBeforeEnableCallback 
	on_before_enable;
    
    /*ci dref_EntityListener_on_after_enable
    */
    DDS_EntityListener_OnAfterEnableCallback 
    on_after_enable;    
};

struct DDS_DomainParticipantFactoryEntityListener {
    /*ci dref_DomainParticipantFactoryEntityListener_participant
     */    
    struct DDS_DomainParticipantEntityListener participant;
    /*ci dref_DomainParticipantFactoryEntityListener_publisher
     */
    struct DDS_PublisherEntityListener publisher;
    /*ci dref_DomainParticipantFactoryEntityListener_subscriber
     */
    struct DDS_SubscriberEntityListener subscriber;
    /*ci dref_DomainParticipantFactoryEntityListener_datawriter
     */
    struct DDS_DataWriterEntityListener datawriter;
    /*ci dref_DomainParticipantFactoryEntityListener_datareader
        */
    struct DDS_DataReaderEntityListener datareader;    
    /*ci dref_DomainParticipantFactoryEntityListener_topic
     */
    struct DDS_TopicEntityListener topic;
    /*ci dref_DomainParticipantFactoryEntityListener_entity
     */
    struct DDS_EntityListener entity;
    /*ci dref_DomainParticipantFactoryEntityListener_param
     */
    void *param;
};


#define DDS_DomainParticipantFactoryEntityListener_INITIALIZER \
{ {NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL},/* Participant */\
  {NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL},/* Publisher   */\
  {NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL},/* Subscriber  */\
  {NULL, NULL, NULL, NULL, NULL, NULL}, /* DataWriter  */\
  {NULL, NULL, NULL, NULL, NULL, NULL}, /* DataReader  */\
  {NULL, NULL, NULL, NULL, NULL, NULL}, /* Topic       */\
  {NULL, NULL},                         /* Entity      */\
  NULL                                  /* param       */\
}

struct DDS_DomainParticipantListener {
    /*ce \dref_DomainParticipantListener_as_topiclistener
     */
    struct DDS_TopicListener        as_topiclistener;

    /*ce \dref_DomainParticipantListener_as_publisherlistener
     */
    struct DDS_PublisherListener    as_publisherlistener;
    
    /*ce \dref_DomainParticipantListener_as_subscriberlistener
     */
    struct DDS_SubscriberListener   as_subscriberlistener;
};


#define DDS_DomainParticipantListener_INITIALIZER   \
    { DDS_TopicListener_INITIALIZER,    \
      DDS_PublisherListener_INITIALIZER, \
      DDS_SubscriberListener_INITIALIZER }


struct DDS_DomainParticipantQos {

    /*e \dref_DomainParticipantQos_user_data
     */
    struct DDS_UserDataQosPolicy  user_data;

    /*e \dref_DomainParticipantQos_entity_factory
     */
    struct DDS_EntityFactoryQosPolicy  entity_factory;

    /* -------------------------------------------------------------- */
    
    /*e \dref_DomainParticipantQos_wire_protocol
    */
    struct DDS_WireProtocolQosPolicy wire_protocol;
               
    /*e \dref_DomainParticipantQos_transport_builtin
    */     
    struct DDS_TransportBuiltinQosPolicy transport_builtin; 

    /*e \dref_DomainParticipantQos_default_unicast
    */     
    struct DDS_TransportUnicastQosPolicy default_unicast; 
    
    /*e \dref_DomainParticipantQos_discovery
     */    
    struct DDS_DiscoveryQosPolicy discovery;   
    
    /*e \dref_DomainParticipantQos_resource_limits
     */    
    struct DDS_DomainParticipantResourceLimitsQosPolicy resource_limits;

    /*e \dref_DomainParticipantQos_event
     */    
    struct DDS_EventQosPolicy event;

    /*e \dref_DomainParticipantQos_receiver_pool
     */    
    struct DDS_ReceiverPoolQosPolicy receiver_pool;

    /*e \dref_DomainParticipantQos_database
     */    
    struct DDS_DatabaseQosPolicy database;

    /*e \dref_DomainParticipantQos_discovery_config
     */    
    struct DDS_DiscoveryConfigQosPolicy discovery_config;
    
    /*i \dref_DomainParticipantQos_exclusive_area
     */
    struct DDS_ExclusiveAreaQosPolicy exclusive_area;
    
    /*e \dref_DomainParticipantQos_property
     */
    struct DDS_PropertyQosPolicy property;

    /*i \dref_DomainParticipantQos_user_object
     */
    struct DDS_UserObjectQosPolicy user_object;

    /*i \dref_DomainParticipantQos_statistics
     */
    struct DDS_StatisticsQosPolicy statistics;

    /*e \dref_DomainParticipantQos_participant_name
     */
    struct DDS_EntityNameQosPolicy participant_name;
};


#define DDS_DomainParticipantQos_INITIALIZER                  \
{ DDS_USER_DATA_QOS_POLICY_DEFAULT,                           \
  DDS_ENTITY_FACTORY_QOS_POLICY_DEFAULT,                      \
  DDS_WIRE_PROTOCOL_QOS_POLICY_DEFAULT,                     \
  DDS_TRANSPORT_BUILTIN_QOS_POLICY_DEFAULT,                 \
  DDS_TRANSPORT_UNICAST_QOS_POLICY_DEFAULT,                 \
  DDS_DISCOVERY_QOS_POLICY_DEFAULT,                         \
  DDS_DOMAIN_PARTICIPANT_RESOURCE_LIMITS_QOS_POLICY_DEFAULT,\
  DDS_EVENT_QOS_POLICY_DEFAULT,                             \
  DDS_RECEIVER_POOL_QOS_POLICY_DEFAULT,                     \
  DDS_DATABASE_QOS_POLICY_DEFAULT,                          \
  DDS_DISCOVERY_CONFIG_QOS_POLICY_DEFAULT,                  \
  DDS_EXCLUSIVE_AREA_QOS_POLICY_DEFAULT,                    \
  DDS_PROPERTY_QOS_POLICY_DEFAULT,                          \
  DDS_USER_OBJECT_QOS_POLICY_DEFAULT,                       \
  DDS_STATISTICS_QOS_POLICY_DEFAULT,                        \
  DDS_ENTITY_NAME_QOS_POLICY_DEFAULT                        \
}

extern DDSCDllExport DDS_ReturnCode_t DDS_DomainParticipantQos_initialize(
    struct DDS_DomainParticipantQos* self);

extern DDSCDllExport DDS_ReturnCode_t DDS_DomainParticipantQos_copy(
    struct DDS_DomainParticipantQos *self,
    const struct DDS_DomainParticipantQos *source);

extern DDSCDllExport DDS_ReturnCode_t DDS_DomainParticipantQos_finalize(
    struct DDS_DomainParticipantQos *self);

struct DDS_DomainParticipantFactoryQos {

    /*e \dref_DomainParticipantFactoryQos_entity_factory
     */
    struct DDS_EntityFactoryQosPolicy  entity_factory;

    /*e \dref_DomainParticipantFactoryQos_resource_limits
     */
    struct DDS_SystemResourceLimitsQosPolicy  resource_limits;
};

extern DDSCDllExport 
DDS_ReturnCode_t DDS_DomainParticipantFactoryQos_initialize(
    struct DDS_DomainParticipantFactoryQos* self);

extern DDSCDllExport DDS_ReturnCode_t DDS_DomainParticipantFactoryQos_copy(
    struct DDS_DomainParticipantFactoryQos *self,
    const struct DDS_DomainParticipantFactoryQos *source);

extern DDSCDllExport DDS_ReturnCode_t DDS_DomainParticipantFactoryQos_finalize(
    struct DDS_DomainParticipantFactoryQos *self);


#define DDS_DomainParticipantFactoryQos_INITIALIZER {DDS_ENTITY_FACTORY_QOS_POLICY_DEFAULT,DDS_SYSTEM_RESOURCE_LIMITS_QOS_POLICY_DEFAULT}

 extern DDSCDllVariable const struct DDS_TopicQos
DDS_TOPIC_QOS_DEFAULT;

 extern DDSCDllVariable const struct DDS_PublisherQos
DDS_PUBLISHER_QOS_DEFAULT;

 extern DDSCDllVariable const struct DDS_SubscriberQos 
DDS_SUBSCRIBER_QOS_DEFAULT;

 extern DDSCDllVariable const struct DDS_FlowControllerProperty_t
DDS_FLOW_CONTROLLER_PROPERTY_DEFAULT;


#define DDS_DomainParticipant_as_entity(domainPtr) \
            ((DDS_Entity*) domainPtr)

extern DDSCDllExport
DDS_ReturnCode_t DDS_DomainParticipant_get_default_topic_qos(
    DDS_DomainParticipant* self, struct DDS_TopicQos* qos);

extern DDSCDllExport DDS_ReturnCode_t 
DDS_DomainParticipant_set_default_topic_qos(
    DDS_DomainParticipant* self, const struct DDS_TopicQos* qos);

extern DDSCDllExport
DDS_ReturnCode_t DDS_DomainParticipant_get_default_publisher_qos(
    DDS_DomainParticipant* self, struct DDS_PublisherQos* qos);

extern DDSCDllExport DDS_ReturnCode_t 
DDS_DomainParticipant_set_default_publisher_qos(
    DDS_DomainParticipant* self, const struct DDS_PublisherQos* qos);

extern DDSCDllExport
DDS_ReturnCode_t DDS_DomainParticipant_get_default_datawriter_qos(
    DDS_DomainParticipant* self, struct DDS_DataWriterQos* qos);

extern DDSCDllExport DDS_ReturnCode_t 
DDS_DomainParticipant_set_default_datawriter_qos(
    DDS_DomainParticipant* self, const struct DDS_DataWriterQos* qos);

extern DDSCDllExport
DDS_ReturnCode_t DDS_DomainParticipant_get_default_subscriber_qos(
    DDS_DomainParticipant* self, struct DDS_SubscriberQos* qos);

extern DDSCDllExport DDS_ReturnCode_t 
DDS_DomainParticipant_set_default_subscriber_qos(
    DDS_DomainParticipant* self, const struct DDS_SubscriberQos* qos);

extern DDSCDllExport
DDS_ReturnCode_t DDS_DomainParticipant_get_default_datareader_qos(
    DDS_DomainParticipant* self, struct DDS_DataReaderQos* qos);

extern DDSCDllExport DDS_ReturnCode_t 
DDS_DomainParticipant_set_default_datareader_qos(
    DDS_DomainParticipant* self, const struct DDS_DataReaderQos* qos);

extern DDSCDllExport
DDS_ReturnCode_t DDS_DomainParticipant_get_default_flowcontroller_property(
    DDS_DomainParticipant* self, struct DDS_FlowControllerProperty_t *property);

extern DDSCDllExport
DDS_ReturnCode_t DDS_DomainParticipant_set_default_flowcontroller_property(
    DDS_DomainParticipant* self, const struct DDS_FlowControllerProperty_t *property);

extern DDSCDllExport DDS_Publisher* DDS_DomainParticipant_create_publisher(
    DDS_DomainParticipant* self,
    const struct DDS_PublisherQos* qos, 
    const struct DDS_PublisherListener* listener,
    DDS_StatusMask mask);

extern DDSCDllExport DDS_ReturnCode_t DDS_DomainParticipant_delete_publisher(
    DDS_DomainParticipant* self, DDS_Publisher* p);

extern DDSCDllExport DDS_Subscriber* DDS_DomainParticipant_create_subscriber(
    DDS_DomainParticipant* self,
    const struct DDS_SubscriberQos* qos,
    const struct DDS_SubscriberListener* listener,
    DDS_StatusMask mask);

extern DDSCDllExport DDS_ReturnCode_t DDS_DomainParticipant_delete_subscriber(
    DDS_DomainParticipant* self, DDS_Subscriber* s);

extern DDSCDllExport DDS_Topic* DDS_DomainParticipant_create_topic(
    DDS_DomainParticipant* self, const char* topic_name, 
    const char* type_name, const struct DDS_TopicQos* qos, 
    const struct DDS_TopicListener* listener,
    DDS_StatusMask mask);

extern DDSCDllExport DDS_ReturnCode_t DDS_DomainParticipant_delete_topic(
    DDS_DomainParticipant* self, DDS_Topic* topic);

extern DDSCDllExport DDS_ContentFilteredTopic* DDS_DomainParticipant_create_contentfilteredtopic(
        DDS_DomainParticipant* self, const char* name,
        DDS_Topic* related_topic, const char* filter_expression, 
        const struct DDS_StringSeq* expression_parameters);

extern DDSCDllExport DDS_ContentFilteredTopic* DDS_DomainParticipant_create_contentfilteredtopic_with_filter(
        DDS_DomainParticipant* self, const char* name,
        const DDS_Topic* related_topic, const char* filter_expression, 
        const struct DDS_StringSeq* expression_parameters,const char* filter_name);

extern DDSCDllExport DDS_ReturnCode_t DDS_DomainParticipant_delete_contentfilteredtopic(
    DDS_DomainParticipant* self,
    DDS_ContentFilteredTopic* a_contentfilteredtopic);

extern DDSCDllExport DDS_ReturnCode_t DDS_DomainParticipant_register_contentfilter(
    DDS_DomainParticipant* self,
    const char *filter_name,
    const struct DDS_ContentFilter *contentfilter);

extern DDSCDllExport void* DDS_DomainParticipant_lookup_contentfilter(
    DDS_DomainParticipant* self,
    const char *filter_name);

extern DDSCDllExport DDS_ReturnCode_t DDS_DomainParticipant_unregister_contentfilter(
    DDS_DomainParticipant* self,
    const char *filter_name);

extern DDSCDllExport DDS_MultiTopic* DDS_DomainParticipant_create_multitopic(
    DDS_DomainParticipant* self, const char* name,
    const char* type_name, const char* subscription_expression, 
    const struct DDS_StringSeq* expression_parameters);

extern DDSCDllExport DDS_ReturnCode_t DDS_DomainParticipant_delete_multitopic(
    DDS_DomainParticipant* self, DDS_MultiTopic* a_multitopic);

extern DDSCDllExport
DDS_FlowController *DDS_DomainParticipant_create_flowcontroller(
    DDS_DomainParticipant* self, const char *name,
    const struct DDS_FlowControllerProperty_t *property);

extern DDSCDllExport
DDS_ReturnCode_t DDS_DomainParticipant_delete_flowcontroller(
    DDS_DomainParticipant* self, DDS_FlowController *fc);

extern DDSCDllExport DDS_Topic* DDS_DomainParticipant_find_topic(
    DDS_DomainParticipant* self, const char* topic_name,
    const struct DDS_Duration_t* timeout);

extern DDSCDllExport DDS_TopicDescription*
DDS_DomainParticipant_lookup_topicdescription(
    DDS_DomainParticipant* self, const char* topic_name);

extern DDSCDllExport DDS_Entity*
DDS_DomainParticipant_lookup_entity(
    DDS_DomainParticipant* self, DDS_BuiltinTopicKey_t *key);

extern DDSCDllExport
DDS_FlowController *DDS_DomainParticipant_lookup_flowcontroller(
    DDS_DomainParticipant* self, const char *name);

extern DDSCDllExport DDS_Subscriber* 
DDS_DomainParticipant_get_builtin_subscriber(
    DDS_DomainParticipant* self);

extern DDSCDllExport DDS_ReturnCode_t DDS_DomainParticipant_ignore_participant(
    DDS_DomainParticipant* self, const DDS_InstanceHandle_t* handle);

extern DDSCDllExport DDS_ReturnCode_t DDS_DomainParticipant_ignore_topic(
    DDS_DomainParticipant* self, const DDS_InstanceHandle_t* handle);

extern DDSCDllExport DDS_ReturnCode_t DDS_DomainParticipant_ignore_publication(
    DDS_DomainParticipant* self, const DDS_InstanceHandle_t* handle);

extern DDSCDllExport DDS_ReturnCode_t DDS_DomainParticipant_ignore_subscription(
    DDS_DomainParticipant* self, const DDS_InstanceHandle_t* handle);

extern DDSCDllExport DDS_DomainId_t DDS_DomainParticipant_get_domain_id(
    DDS_DomainParticipant* self);

extern DDSCDllExport DDS_ReturnCode_t
DDS_DomainParticipant_delete_contained_entities(
    DDS_DomainParticipant* self);

extern DDSCDllExport DDS_ReturnCode_t DDS_DomainParticipant_assert_liveliness(
    DDS_DomainParticipant* self);

extern DDSCDllExport DDS_ReturnCode_t DDS_DomainParticipant_get_publishers(
    DDS_DomainParticipant* self,
    struct DDS_PublisherSeq* publishers);

extern DDSCDllExport DDS_ReturnCode_t DDS_DomainParticipant_get_subscribers(
    DDS_DomainParticipant* self,
    struct DDS_SubscriberSeq* subscribers);

extern DDSCDllExport DDS_ReturnCode_t DDS_DomainParticipant_get_current_time(
    DDS_DomainParticipant* self,
    struct DDS_Time_t* current_time);

extern DDSCDllExport DDS_Boolean
DDS_DomainParticipant_contains_entity(
    DDS_DomainParticipant* self,
    const DDS_InstanceHandle_t* a_handle);

extern DDSCDllExport DDS_ReturnCode_t
DDS_DomainParticipant_get_builtin_topic_key(const DDS_DomainParticipant* self,
                                            DDS_BuiltinTopicKey_t *key);

extern DDSCDllExport DDS_ReturnCode_t
DDS_DomainParticipant_get_discovered_participants(
    DDS_DomainParticipant* self,
    struct DDS_InstanceHandleSeq* participant_handles);

struct DDS_ParticipantBuiltinTopicData;

extern DDSCDllExport DDS_ReturnCode_t
DDS_DomainParticipant_get_discovered_participant_data(
    DDS_DomainParticipant* self,
    struct DDS_ParticipantBuiltinTopicData* participant_data,
    const DDS_InstanceHandle_t* participant_handle);

extern DDSCDllExport DDS_ReturnCode_t
DDS_DomainParticipant_get_discovered_topics(
    DDS_DomainParticipant* self,
    struct DDS_InstanceHandleSeq* topic_handles);

struct DDS_TopicBuiltinTopicData;

extern DDSCDllExport DDS_ReturnCode_t
DDS_DomainParticipant_get_discovered_topic_data(
    DDS_DomainParticipant* self,
    struct DDS_TopicBuiltinTopicData* topic_data,
    const DDS_InstanceHandle_t* topic_handle);

extern DDSCDllExport DDS_ReturnCode_t
DDS_DomainParticipant_get_publications(
    DDS_DomainParticipant* self,
    struct DDS_InstanceHandleSeq* publication_handles,
    DDS_Boolean include_contained_entities);

extern DDSCDllExport DDS_ReturnCode_t
DDS_DomainParticipant_get_publication_data(
    DDS_DomainParticipant* self,
    struct DDS_PublicationBuiltinTopicData* publication_data,
    const DDS_InstanceHandle_t* publication_handle);

extern DDSCDllExport DDS_ReturnCode_t
DDS_DomainParticipant_get_subscriptions(
    DDS_DomainParticipant* self,
    struct DDS_InstanceHandleSeq* subscription_handles,
    DDS_Boolean include_contained_entities);

extern DDSCDllExport DDS_ReturnCode_t
DDS_DomainParticipant_get_subscription_data(
    DDS_DomainParticipant* self,
    struct DDS_SubscriptionBuiltinTopicData* subscription_data,
    const DDS_InstanceHandle_t* subscription_handle);

extern DDSCDllExport DDS_ReturnCode_t DDS_DomainParticipant_add_peer(
    DDS_DomainParticipant* self, const char* peer_desc_string);

extern DDSCDllExport DDS_ReturnCode_t DDS_DomainParticipant_set_qos(
    DDS_DomainParticipant* self, const struct DDS_DomainParticipantQos* qos);

extern DDSCDllExport DDS_ReturnCode_t 
DDS_DomainParticipant_get_qos(
    DDS_DomainParticipant* self, struct DDS_DomainParticipantQos* qos);

extern DDSCDllExport DDS_ReturnCode_t DDS_DomainParticipant_set_listener(
    DDS_DomainParticipant* self,
    const struct DDS_DomainParticipantListener* l,
    DDS_StatusMask mask);

extern DDSCDllExport struct DDS_DomainParticipantListener
DDS_DomainParticipant_get_listener(DDS_DomainParticipant* self);

extern DDSCDllExport DDS_ReturnCode_t DDS_DomainParticipant_get_listenerX(
    DDS_DomainParticipant* self,
    struct DDS_DomainParticipantListener* listener);

 extern DDSCDllVariable const struct DDS_DomainParticipantQos 
    DDS_PARTICIPANT_QOS_DEFAULT;

typedef struct DDS_DomainParticipantFactoryImpl
    DDS_DomainParticipantFactory;

extern DDSCDllExport DDS_DomainParticipantFactory*
DDS_DomainParticipantFactory_get_instance();

extern DDSCDllExport DDS_ReturnCode_t
DDS_DomainParticipantFactory_finalize_instance();

extern DDSCDllExport DDS_ReturnCode_t
DDS_DomainParticipantFactory_set_entity_listener(
    DDS_DomainParticipantFactory* self,
    const struct DDS_DomainParticipantFactoryEntityListener *listener);

extern DDSCDllExport struct DDS_DomainParticipantFactoryEntityListener*
DDS_DomainParticipantFactory_get_entity_listener(
            DDS_DomainParticipantFactory* self);


#define DDS_TheParticipantFactory DDS_DomainParticipantFactory_get_instance()

extern DDSCDllExport DDS_ReturnCode_t
DDS_DomainParticipantFactory_set_default_participant_qos(
    DDS_DomainParticipantFactory* self,
    const struct DDS_DomainParticipantQos* qos);

extern DDSCDllExport DDS_ReturnCode_t 
DDS_DomainParticipantFactory_get_default_participant_qos(
    DDS_DomainParticipantFactory* self,
    struct DDS_DomainParticipantQos* qos);

extern DDSCDllExport DDS_DomainParticipant* 
DDS_DomainParticipantFactory_create_participant(
        DDS_DomainParticipantFactory* self,
        DDS_DomainId_t domainId,
        const struct DDS_DomainParticipantQos* qos, 
        const struct DDS_DomainParticipantListener* listener,
	DDS_StatusMask mask);

extern DDSCDllExport DDS_ReturnCode_t 
DDS_DomainParticipantFactory_delete_participant(
    DDS_DomainParticipantFactory* self,
    DDS_DomainParticipant* a_participant);

extern DDSCDllExport DDS_DomainParticipant*
DDS_DomainParticipantFactory_lookup_participant(
    DDS_DomainParticipantFactory* self,
    DDS_DomainId_t domainId);

extern DDSCDllExport DDS_DomainParticipant*
DDS_DomainParticipantFactory_lookup_participant_by_builtin_topic_key(
    DDS_DomainParticipantFactory* self,
    DDS_BuiltinTopicKey_t *key);

extern DDSCDllExport DDS_Entity*
DDS_DomainParticipantFactory_lookup_entity(
    DDS_DomainParticipantFactory* self,
    DDS_BuiltinTopicKey_t *key);

extern DDSCDllExport DDS_ReturnCode_t 
DDS_DomainParticipantFactory_get_qos(
    DDS_DomainParticipantFactory* self,
    struct DDS_DomainParticipantFactoryQos* qos);

extern DDSCDllExport DDS_ReturnCode_t 
DDS_DomainParticipantFactory_set_qos(
    DDS_DomainParticipantFactory* self,
    const struct DDS_DomainParticipantFactoryQos* qos);


#ifdef __cplusplus
    }	/* extern "C" */
#endif

#endif /* dds_c_domain_h */
