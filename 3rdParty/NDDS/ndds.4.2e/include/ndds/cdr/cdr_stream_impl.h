/*
 * @(#)cdr_stream_impl.h    generated by: makeheader    Mon Dec  3 23:08:01 2007
 *
 *		built from:	stream_impl.ifc
 */

#ifndef cdr_stream_impl_h
#define cdr_stream_impl_h


 #ifndef osapi_type_h
    #include "osapi/osapi_type.h"
 #endif
 #ifndef osapi_type_h
    #include "osapi/osapi_type.h"
 #endif
 #ifndef osapi_alignment_h
    #include "osapi/osapi_alignment.h"
 #endif
 #ifndef reda_buffer_h
    #include "reda/reda_buffer.h"
 #endif
 
#ifdef __cplusplus
    extern "C" {
#endif

struct RTICdrStream {
    /*i
      An 8 byte aligned offset from the realbuff pointer.
      CDR assums that the initial position in the stream is 8 byte aligned.
    */
    char *_buffer;
    /*i
      Total allocated length of the buffer.
    */ 
    int _bufferLength;
    /*i
      Current position in the buffer.
    */
    char *_currentPosition;
    /*i
      If RTI_TRUE, then deserialize methods will flip contents
     */
    RTIBool _needByteSwap;
    /*i
      Endianess of the stream
    */
    RTICdrEndian _endian;
    /*i
      Native endianess of the system
    */
    RTICdrEndian _nativeEndian;
    /*i
      A 32 bit buffer for storing bits of bit-fields
    */
    RTICdrUnsignedLong _bitBuffer;
    /*i
      Current length of the bitBuffer
    */
    int _bitBufferLength;
    /*i
      data encapsulation kind identifier
    */
    RTICdrUnsignedShort _encapsulationKind;
    /*i
      data encapsulation options of specific kind
    */
    RTICdrUnsignedShort _encapsulationOptions;
};



#ifdef RTI_ENDIAN_LITTLE
    #define RTICdrStream_setEndianMacro(me, endian) \
       ((me)->_endian = (endian),                   \
        (((endian) == RTI_CDR_ENDIAN_LITTLE) ?      \
	 ((me)->_needByteSwap = RTI_FALSE) :        \
	 ((me)->_needByteSwap = RTI_TRUE)),         \
        (((endian) == RTI_CDR_ENDIAN_LITTLE) ?         \
         ((me)->_encapsulationKind = RTI_CDR_ENCAPSULATION_ID_CDR_LE) : \
	 ((me)->_encapsulationKind = RTI_CDR_ENCAPSULATION_ID_CDR_BE)))
#else
    #define RTICdrStream_setEndianMacro(me, endian) \
       ((me)->_endian = (endian),                   \
        (((endian) == RTI_CDR_ENDIAN_BIG) ?         \
	 ((me)->_needByteSwap = RTI_FALSE) :        \
	 ((me)->_needByteSwap = RTI_TRUE)),         \
        (((endian) == RTI_CDR_ENDIAN_BIG) ?         \
         ((me)->_encapsulationKind = RTI_CDR_ENCAPSULATION_ID_CDR_BE) : \
	 ((me)->_encapsulationKind = RTI_CDR_ENCAPSULATION_ID_CDR_LE)))
#endif /* RTI_ENDIAN_LITTLE */

#ifndef RTI_PRECONDITION_TEST
  #define RTICdrStream_setEndian RTICdrStream_setEndianMacro
#endif /* RTI_PRECONDITION_TEST */

#define RTICdrStream_getEndianMacro(me) \
        ((me)->_endian)

#ifndef RTI_PRECONDITION_TEST
  #define RTICdrStream_getEndian RTICdrStream_getEndianMacro
#endif /* RTI_PRECONDITION_TEST */

/* cast required to quiet VS2005 compiler warnings */
#define RTICdrStream_getCurrentPositionOffsetMacro(me) \
    ((RTI_INT32)((me)->_currentPosition - (me)->_buffer))
#ifndef RTI_PRECONDITION_TEST
  #define RTICdrStream_getCurrentPositionOffset \
     RTICdrStream_getCurrentPositionOffsetMacro
#endif /* RTI_PRECONDITION_TEST */

#define RTICdrStream_getRemainderMacro(me) \
  ((me)->_bufferLength - RTICdrStream_getCurrentPositionOffsetMacro(me))
#ifndef RTI_PRECONDITION_TEST
  #define RTICdrStream_getRemainder RTICdrStream_getRemainderMacro
#endif /* RTI_PRECONDITION_TEST */

#define RTICdrStream_getCurrentPositionMacro(me) \
  ((me)->_currentPosition)
#ifndef RTI_PRECONDITION_TEST
  #define RTICdrStream_getCurrentPosition \
     RTICdrStream_getCurrentPositionMacro
#endif /* RTI_PRECONDITION_TEST */

#define RTICdrStream_checkSizeMacro(me, size) \
  ((RTICdrStream_getCurrentPositionOffset((me)) >        \
    (int)((me)->_bufferLength - (size))) ? RTI_FALSE : RTI_TRUE)
#ifndef RTI_PRECONDITION_TEST
  #define RTICdrStream_checkSize RTICdrStream_checkSizeMacro
#endif /* RTI_PRECONDITION_TEST */

#define RTICdrStream_pushStateMacro(me, state)                   \
  (state)->length = (me)->_bufferLength;                         \
  (state)->pointer = (me)->_buffer;                              \
  (me)->_bufferLength -= (me)->_currentPosition - (me)->_buffer; \
  (me)->_buffer = (me)->_currentPosition 
  
#ifndef RTI_PRECONDITION_TEST
  #define RTICdrStream_pushState \
     RTICdrStream_pushStateMacro
#endif /* RTI_PRECONDITION_TEST */

#define RTICdrStream_popStateMacro(me, state) \
  (me)->_bufferLength = (state)->length;      \
  (me)->_buffer = (state)->pointer 
#ifndef RTI_PRECONDITION_TEST
  #define RTICdrStream_popState \
     RTICdrStream_popStateMacro
#endif /* RTI_PRECONDITION_TEST */

/* ----------------------------------------------------------------- */

#define RTICdrStream_alignFastMacro(me, align)  \
    (me)->_currentPosition = (me)->_buffer +    \
     RTIOsapiAlignment_alignSizeUp(            \
        RTICdrStream_getCurrentPositionOffset((me)), (align))
#ifndef RTI_PRECONDITION_TEST
  #define RTICdrStream_alignFast RTICdrStream_alignFastMacro
#endif /* RTI_PRECONDITION_TEST */



  typedef RTI_UINT8 RTICdr1Byte;
  typedef RTI_UINT16 RTICdr2Byte;
  typedef RTI_UINT32 RTICdr4Byte;
  typedef struct { char bytes[8]; } RTICdr8Byte;
  typedef struct { char bytes[16]; } RTICdr16Byte;



#define RTICdrStream_serialize1ByteFastMacro(me, in)      \
    *((me)->_currentPosition++) = *((char *)(in))
				    
#define RTICdrStream_deserialize1ByteFastMacro(me, out)   \
    *((char *)(out)) = *((me)->_currentPosition++)

#define RTICdrStream_skip1ByteFastMacro(me)               \
    ((me)->_currentPosition++)

#define RTICdrStream_serialize2ByteFastMacro(me, in)      \
    (((me)->_needByteSwap) ?                              \
     (void)(                                              \
      *((me)->_currentPosition++) = *((char *)(in) + 1),  \
      *((me)->_currentPosition++) = *((char *)(in)    )   \
     ) :                                                  \
     (void)(                                              \
      *(RTICdr2Byte *)((me)->_currentPosition) = (*(in)), \
      (me)->_currentPosition += RTI_CDR_SHORT_SIZE        \
     )                                                    \
    )

#define RTICdrStream_deserialize2ByteFastMacro(me, out)   \
    (((me)->_needByteSwap) ?                              \
     (void)(                                              \
      *((char *)(out) + 1) = *((me)->_currentPosition++), \
      *((char *)(out)    ) = *((me)->_currentPosition++)  \
     ) :                                                  \
     (void)(                                              \
      *(out) = *(RTICdr2Byte *)((me)->_currentPosition),  \
      (me)->_currentPosition += RTI_CDR_SHORT_SIZE        \
     )                                                    \
    )

#define RTICdrStream_skip2ByteFastMacro(me)               \
    ((me)->_currentPosition += RTI_CDR_SHORT_SIZE)

#define RTICdrStream_serialize4ByteFastMacro(me, in)      \
    (((me)->_needByteSwap) ?                              \
     (void)(                                              \
      *((me)->_currentPosition++) = *((char *)(in) + 3),  \
      *((me)->_currentPosition++) = *((char *)(in) + 2),  \
      *((me)->_currentPosition++) = *((char *)(in) + 1),  \
      *((me)->_currentPosition++) = *((char *)(in)    )   \
     ) :                                                  \
     (void)(                                              \
      *(RTICdr4Byte *)((me)->_currentPosition) = (*(in)), \
      (me)->_currentPosition += RTI_CDR_LONG_SIZE         \
     )                                                    \
    )

#define RTICdrStream_deserialize4ByteFastMacro(me, out)   \
    (((me)->_needByteSwap) ?                              \
     (void)(                                              \
      *((char *)(out) + 3) = *((me)->_currentPosition++), \
      *((char *)(out) + 2) = *((me)->_currentPosition++), \
      *((char *)(out) + 1) = *((me)->_currentPosition++), \
      *((char *)(out)    ) = *((me)->_currentPosition++)  \
     ) :                                                  \
     (void)(                                              \
      *(out) = *(RTICdr4Byte *)((me)->_currentPosition),  \
      (me)->_currentPosition += RTI_CDR_LONG_SIZE         \
     )                                                    \
    )

#define RTICdrStream_skip4ByteFastMacro(me)               \
    ((me)->_currentPosition += RTI_CDR_LONG_SIZE)

#define RTICdrStream_serialize8ByteFastMacro(me, in)      \
    (((me)->_needByteSwap) ?                              \
     (void)(                                              \
      *((me)->_currentPosition++) = *((char *)(in) + 7),  \
      *((me)->_currentPosition++) = *((char *)(in) + 6),  \
      *((me)->_currentPosition++) = *((char *)(in) + 5),  \
      *((me)->_currentPosition++) = *((char *)(in) + 4),  \
      *((me)->_currentPosition++) = *((char *)(in) + 3),  \
      *((me)->_currentPosition++) = *((char *)(in) + 2),  \
      *((me)->_currentPosition++) = *((char *)(in) + 1),  \
      *((me)->_currentPosition++) = *((char *)(in)    )   \
     ) :                                                  \
     (void)(                                              \
      *(RTICdr8Byte *)((me)->_currentPosition) = (*(in)), \
      (me)->_currentPosition += RTI_CDR_LONG_LONG_SIZE    \
     )                                                    \
    )

#define RTICdrStream_deserialize8ByteFastMacro(me, out)   \
    (((me)->_needByteSwap) ?                              \
     (void)(                                              \
      *((char *)(out) + 7) = *((me)->_currentPosition++), \
      *((char *)(out) + 6) = *((me)->_currentPosition++), \
      *((char *)(out) + 5) = *((me)->_currentPosition++), \
      *((char *)(out) + 4) = *((me)->_currentPosition++), \
      *((char *)(out) + 3) = *((me)->_currentPosition++), \
      *((char *)(out) + 2) = *((me)->_currentPosition++), \
      *((char *)(out) + 1) = *((me)->_currentPosition++), \
      *((char *)(out)    ) = *((me)->_currentPosition++)  \
     ) :                                                  \
     (void)(                                              \
      *(out) = *(RTICdr8Byte *)((me)->_currentPosition),  \
      (me)->_currentPosition += RTI_CDR_LONG_LONG_SIZE    \
     )                                                    \
    )

#define RTICdrStream_skip8ByteFastMacro(me)               \
    ((me)->_currentPosition += RTI_CDR_LONG_LONG_SIZE)

#define RTICdrStream_serialize16ByteFastMacro(me, in)     \
    (((me)->_needByteSwap) ?                              \
     (void)(                                              \
      *((me)->_currentPosition++) = *((char *)(in) + 15), \
      *((me)->_currentPosition++) = *((char *)(in) + 14), \
      *((me)->_currentPosition++) = *((char *)(in) + 13), \
      *((me)->_currentPosition++) = *((char *)(in) + 12), \
      *((me)->_currentPosition++) = *((char *)(in) + 11), \
      *((me)->_currentPosition++) = *((char *)(in) + 10), \
      *((me)->_currentPosition++) = *((char *)(in) +  9), \
      *((me)->_currentPosition++) = *((char *)(in) +  8), \
      *((me)->_currentPosition++) = *((char *)(in) +  7), \
      *((me)->_currentPosition++) = *((char *)(in) +  6), \
      *((me)->_currentPosition++) = *((char *)(in) +  5), \
      *((me)->_currentPosition++) = *((char *)(in) +  4), \
      *((me)->_currentPosition++) = *((char *)(in) +  3), \
      *((me)->_currentPosition++) = *((char *)(in) +  2), \
      *((me)->_currentPosition++) = *((char *)(in) +  1), \
      *((me)->_currentPosition++) = *((char *)(in)     )  \
     ) :                                                  \
     (void)(                                              \
      *(RTICdr16Byte *)((me)->_currentPosition) = (*(in)), \
      (me)->_currentPosition += RTI_CDR_LONG_DOUBLE_SIZE  \
     )                                                    \
    )

#define RTICdrStream_deserialize16ByteFastMacro(me, out)   \
    (((me)->_needByteSwap) ?                               \
     (void)(                                               \
      *((char *)(out) + 15) = *((me)->_currentPosition++), \
      *((char *)(out) + 14) = *((me)->_currentPosition++), \
      *((char *)(out) + 13) = *((me)->_currentPosition++), \
      *((char *)(out) + 12) = *((me)->_currentPosition++), \
      *((char *)(out) + 11) = *((me)->_currentPosition++), \
      *((char *)(out) + 10) = *((me)->_currentPosition++), \
      *((char *)(out) +  9) = *((me)->_currentPosition++), \
      *((char *)(out) +  8) = *((me)->_currentPosition++), \
      *((char *)(out) +  7) = *((me)->_currentPosition++), \
      *((char *)(out) +  6) = *((me)->_currentPosition++), \
      *((char *)(out) +  5) = *((me)->_currentPosition++), \
      *((char *)(out) +  4) = *((me)->_currentPosition++), \
      *((char *)(out) +  3) = *((me)->_currentPosition++), \
      *((char *)(out) +  2) = *((me)->_currentPosition++), \
      *((char *)(out) +  1) = *((me)->_currentPosition++), \
      *((char *)(out)     ) = *((me)->_currentPosition++)  \
     ) :                                                   \
     (void)(                                               \
      *(out) = *(RTICdr16Byte *)((me)->_currentPosition),  \
      (me)->_currentPosition += RTI_CDR_LONG_DOUBLE_SIZE   \
     )                                                     \
    )

#define RTICdrStream_skip16ByteFastMacro(me)               \
    ((me)->_currentPosition += RTI_CDR_LONG_DOUBLE_SIZE)

#ifndef RTI_PRECONDITION_TEST
  #define RTICdrStream_serialize1ByteFast RTICdrStream_serialize1ByteFastMacro
  #define RTICdrStream_deserialize1ByteFast \
    RTICdrStream_deserialize1ByteFastMacro
  #define RTICdrStream_skip1ByteFast RTICdrStream_skip1ByteFastMacro
  #define RTICdrStream_serialize2ByteFast RTICdrStream_serialize2ByteFastMacro
  #define RTICdrStream_deserialize2ByteFast \
    RTICdrStream_deserialize2ByteFastMacro
  #define RTICdrStream_skip2ByteFast RTICdrStream_skip2ByteFastMacro
  #define RTICdrStream_serialize4ByteFast RTICdrStream_serialize4ByteFastMacro
  #define RTICdrStream_deserialize4ByteFast \
    RTICdrStream_deserialize4ByteFastMacro
  #define RTICdrStream_skip4ByteFast RTICdrStream_skip4ByteFastMacro
  #define RTICdrStream_serialize8ByteFast RTICdrStream_serialize8ByteFastMacro
  #define RTICdrStream_deserialize8ByteFast \
    RTICdrStream_deserialize8ByteFastMacro
  #define RTICdrStream_skip8ByteFast RTICdrStream_skip8ByteFastMacro
  #define RTICdrStream_serialize16ByteFast RTICdrStream_serialize16ByteFastMacro
  #define RTICdrStream_deserialize16ByteFast \
    RTICdrStream_deserialize16ByteFastMacro
  #define RTICdrStream_skip16ByteFast RTICdrStream_skip16ByteFastMacro

#else
  RTICdrDllExport
  void RTICdrStream_serialize1ByteFast(struct RTICdrStream *me,
				       const RTICdr1Byte *in);
  RTICdrDllExport
  void RTICdrStream_deserialize1ByteFast(struct RTICdrStream *me,
					 RTICdr1Byte *out);
  RTICdrDllExport
  void RTICdrStream_skip1ByteFast(struct RTICdrStream *me);
  RTICdrDllExport
  void RTICdrStream_serialize2ByteFast(struct RTICdrStream *me,
				       const RTICdr2Byte *in);
  RTICdrDllExport
  void RTICdrStream_deserialize2ByteFast(struct RTICdrStream *me,
					 RTICdr2Byte *out);
  RTICdrDllExport
  void RTICdrStream_skip2ByteFast(struct RTICdrStream *me);
  RTICdrDllExport
  void RTICdrStream_serialize4ByteFast(struct RTICdrStream *me,
				       const RTICdr4Byte* in);
  RTICdrDllExport
  void RTICdrStream_deserialize4ByteFast(struct RTICdrStream *me,
					 RTICdr4Byte* out);
  RTICdrDllExport
  void RTICdrStream_skip4ByteFast(struct RTICdrStream *me);
  RTICdrDllExport
  void RTICdrStream_serialize8ByteFast(struct RTICdrStream *me,
				       const RTICdr8Byte* in);
  RTICdrDllExport
  void RTICdrStream_deserialize8ByteFast(struct RTICdrStream *me,
					 RTICdr8Byte *out);
  RTICdrDllExport
  void RTICdrStream_skip8ByteFast(struct RTICdrStream *me);
  RTICdrDllExport
  void RTICdrStream_serialize16ByteFast(struct RTICdrStream *me,
					const RTICdr16Byte* in);
  RTICdrDllExport
  void RTICdrStream_deserialize16ByteFast(struct RTICdrStream *me,
					  RTICdr16Byte *out);
  RTICdrDllExport
  void RTICdrStream_skip16ByteFast(struct RTICdrStream *me);
#endif /* RTI_PRECONDITION_TEST */



     
#define RTICdrStream_flushBitsBuffer(me)                                    \
    ((RTICdrStream_serialize4Byte((me), (RTICdr4Byte *)(&(me)->_bitBuffer)) \
        == RTI_TRUE) ?                                                      \
     ((me)->_bitBufferLength = 0, (me)->_bitBuffer = 0, RTI_TRUE) :         \
     	(RTI_FALSE))
     
#define RTICdrStream_resetBitsBuffer(me)                                    \
    ((me)->_bitBufferLength = 0,                                            \
     (me)->_bitBuffer = 0, RTI_TRUE)

#define RTICdrStream_setBitsMacro(me, val, bitSize)        \
    ((bitSize) >= 32) ?                                    \
    ((me)->_bitBuffer = *(val),                            \
     (me)->_bitBufferLength = (bitSize)) :                 \
    ((me)->_bitBuffer += (*(val) & ((1 << (bitSize))-1))   \
                           << (me)->_bitBufferLength,      \
     (me)->_bitBufferLength += (bitSize))
     
#define RTICdrStream_getBitsMacro(me, val, bitSize)        \
    (((bitSize) >= 32) ?                                   \
     (*(val) = (me)->_bitBuffer,                           \
      (me)->_bitBufferLength = (bitSize)) :                \
     (*(val) = ((me)->_bitBuffer >>                        \
      (me)->_bitBufferLength) & ((1 << (bitSize))-1),      \
      (me)->_bitBufferLength += (bitSize)))
     
#define RTICdrStream_serializeBits(me, val, bitSize)                    \
    ((((bitSize) + (me)->_bitBufferLength <= 32) ||                     \
         (RTICdrStream_flushBitsBuffer(me) == RTI_TRUE)) ?              \
        (RTICdrStream_setBitsMacro((me), (val), (bitSize)), RTI_TRUE) : \
     RTI_FALSE)
     

#define RTICdrStream_deserializeBits(me, val, bitSize)                \
    ((((me)->_bitBufferLength != 0 &&                                 \
       (bitSize) + (me)->_bitBufferLength <= 32)                      \
      || ((me)->_bitBufferLength = 0,                                 \
          RTICdrStream_deserialize4Byte((me), &(me)->_bitBuffer)) ) ? \
     (RTICdrStream_getBitsMacro((me), (val), (bitSize)), RTI_TRUE) :  \
     RTI_FALSE)





   #define RTICdrStream_serializeCharFast(me, in) \
     RTICdrStream_serialize1ByteFast((me), (const RTICdr1Byte *)(in))

   #define RTICdrStream_deserializeCharFast(me, out) \
     RTICdrStream_deserialize1ByteFast((me), (RTICdr1Byte *)(out))

   #define RTICdrStream_skipCharFast(me) \
     RTICdrStream_skip1ByteFast((me))

   #define RTICdrStream_serializeWcharFast(me, in) \
     RTICdrStream_serialize4ByteFast((me), (const RTICdr4Byte *)(in))

   #define RTICdrStream_deserializeWcharFast(me, out) \
     RTICdrStream_deserialize4ByteFast((me), (RTICdr4Byte *)(out))

   #define RTICdrStream_skipWcharFast(me) \
     RTICdrStream_skip4ByteFast((me))

   #define RTICdrStream_serializeOctetFast(me, in) \
     RTICdrStream_serialize1ByteFast((me), (const RTICdr1Byte *)(in))

   #define RTICdrStream_deserializeOctetFast(me, out) \
     RTICdrStream_deserialize1ByteFast((me), (RTICdr1Byte *)(out))

   #define RTICdrStream_skipOctetFast(me) \
     RTICdrStream_skip1ByteFast((me))

   #define RTICdrStream_serializeShortFast(me, in) \
     RTICdrStream_serialize2ByteFast((me), (const RTICdr2Byte *)(in))

   #define RTICdrStream_deserializeShortFast(me, out) \
     RTICdrStream_deserialize2ByteFast((me), (RTICdr2Byte *)(out))

   #define RTICdrStream_skipShortFast(me) \
     RTICdrStream_skip2ByteFast((me))

   #define RTICdrStream_serializeUnsignedShortFast(me, in) \
     RTICdrStream_serialize2ByteFast((me), (const RTICdr2Byte *)(in))

   #define RTICdrStream_deserializeUnsignedShortFast(me, out) \
     RTICdrStream_deserialize2ByteFast((me), (RTICdr2Byte *)(out))

   #define RTICdrStream_skipUnsignedShortFast(me) \
     RTICdrStream_skip2ByteFast((me))

   #define RTICdrStream_serializeLongFast(me, in) \
     RTICdrStream_serialize4ByteFast((me), (const RTICdr4Byte *)(in))

   #define RTICdrStream_deserializeLongFast(me, out) \
     RTICdrStream_deserialize4ByteFast((me), (RTICdr4Byte *)(out))

   #define RTICdrStream_skipLongFast(me) \
     RTICdrStream_skip4ByteFast((me))

   #define RTICdrStream_serializeUnsignedLongFast(me, in) \
     RTICdrStream_serialize4ByteFast((me), (const RTICdr4Byte *)(in))

   #define RTICdrStream_deserializeUnsignedLongFast(me, out) \
     RTICdrStream_deserialize4ByteFast((me), (RTICdr4Byte *)(out))

   #define RTICdrStream_skipUnsignedLongFast(me) \
     RTICdrStream_skip4ByteFast((me))

   #define RTICdrStream_serializeLongLongFast(me, in) \
     RTICdrStream_serialize8ByteFast((me), (const RTICdr8Byte *)(in))

   #define RTICdrStream_deserializeLongLongFast(me, out) \
     RTICdrStream_deserialize8ByteFast((me), (RTICdr8Byte *)(out))

   #define RTICdrStream_skipLongLongFast(me) \
     RTICdrStream_skip8ByteFast((me))

   #define RTICdrStream_serializeUnsignedLongLongFast(me, in) \
     RTICdrStream_serialize8ByteFast((me), (const RTICdr8Byte *)(in))

   #define RTICdrStream_deserializeUnsignedLongLongFast(me, out) \
     RTICdrStream_deserialize8ByteFast((me), (RTICdr8Byte *)(out))

   #define RTICdrStream_skipUnsignedLongLongFast(me) \
     RTICdrStream_skip8ByteFast((me))

   #define RTICdrStream_serializeFloatFast(me, in) \
     RTICdrStream_serialize4ByteFast((me), (const RTICdr4Byte *)(in))

   #define RTICdrStream_deserializeFloatFast(me, out) \
     RTICdrStream_deserialize4ByteFast((me), (RTICdr4Byte *)(out))

   #define RTICdrStream_skipFloatFast(me) \
     RTICdrStream_skip4ByteFast((me))

   #define RTICdrStream_serializeLongDoubleFast(me, in) \
     RTICdrStream_serialize16ByteFast((me), (const RTICdr16Byte *)(in))

   #define RTICdrStream_deserializeLongDoubleFast(me, out) \
     RTICdrStream_deserialize16ByteFast((me), (RTICdr16Byte *)(out))

   #define RTICdrStream_skipLongDoubleFast(me) \
     RTICdrStream_skip16ByteFast((me))

   #define RTICdrStream_serializeBooleanFast(me, in) \
     RTICdrStream_serialize1ByteFast((me), (const RTICdr1Byte *)(in))

   #define RTICdrStream_deserializeBooleanFast(me, out) \
     RTICdrStream_deserialize1ByteFast((me), (RTICdr1Byte *)(out))

   #define RTICdrStream_skipBooleanFast(me) \
     RTICdrStream_skip1ByteFast((me))

   #define RTICdrStream_serializeEnumFast(me, in) \
     RTICdrStream_serialize4ByteFast((me), (const RTICdr4Byte *)(in))

   #define RTICdrStream_deserializeEnumFast(me, out) \
     RTICdrStream_deserialize4ByteFast((me), (RTICdr4Byte *)(out))

   #define RTICdrStream_skipEnumFast(me) \
     RTICdrStream_skip4ByteFast((me))



  #define RTICdrStream_serialize1Byte(me, in)                           \
    ((RTICdrStream_align((me), 1) &&                                    \
      RTICdrStream_checkSize((me), 1)) ?                                \
     (RTICdrStream_serialize1ByteFast((me), (const RTICdr1Byte *)(in)), \
      RTI_TRUE) : RTI_FALSE)

  #define RTICdrStream_deserialize1Byte(me, in)                       \
    ((RTICdrStream_align((me), 1) &&                                  \
      RTICdrStream_checkSize((me), 1)) ?                              \
     (RTICdrStream_deserialize1ByteFast((me), (RTICdr1Byte *)(in)),   \
      RTI_TRUE) : RTI_FALSE)

  #define RTICdrStream_skip1Byte(me)                                  \
    ((RTICdrStream_align((me), 1) &&                                  \
      RTICdrStream_checkSize((me), 1)) ?                              \
     (RTICdrStream_skip1ByteFast((me)),                               \
      RTI_TRUE) : RTI_FALSE)

  #define RTICdrStream_serialize2Byte(me, in)                           \
    ((RTICdrStream_align((me), 2) &&                                    \
      RTICdrStream_checkSize((me), 2)) ?                                \
     (RTICdrStream_serialize2ByteFast((me), (const RTICdr2Byte *)(in)), \
      RTI_TRUE) : RTI_FALSE)

  #define RTICdrStream_deserialize2Byte(me, in)                       \
    ((RTICdrStream_align((me), 2) &&                                  \
      RTICdrStream_checkSize((me), 2)) ?                              \
     (RTICdrStream_deserialize2ByteFast((me), (RTICdr2Byte *)(in)),   \
      RTI_TRUE) : RTI_FALSE)

  #define RTICdrStream_skip2Byte(me)                                  \
    ((RTICdrStream_align((me), 2) &&                                  \
      RTICdrStream_checkSize((me), 2)) ?                              \
     (RTICdrStream_skip2ByteFast((me)),                               \
      RTI_TRUE) : RTI_FALSE)

  #define RTICdrStream_serialize4Byte(me, in)                           \
    ((RTICdrStream_align((me), 4) &&                                    \
      RTICdrStream_checkSize((me), 4)) ?                                \
     (RTICdrStream_serialize4ByteFast((me), (const RTICdr4Byte *)(in)), \
      RTI_TRUE) : RTI_FALSE)

  #define RTICdrStream_deserialize4Byte(me, in)                       \
    ((RTICdrStream_align((me), 4) &&                                  \
      RTICdrStream_checkSize((me), 4)) ?                              \
     (RTICdrStream_deserialize4ByteFast((me), (RTICdr4Byte *)(in)),   \
      RTI_TRUE) : RTI_FALSE)

  #define RTICdrStream_skip4Byte(me)                                  \
    ((RTICdrStream_align((me), 4) &&                                  \
      RTICdrStream_checkSize((me), 4)) ?                              \
     (RTICdrStream_skip4ByteFast((me)),                               \
      RTI_TRUE) : RTI_FALSE)

  #define RTICdrStream_serialize8Byte(me, in)                           \
    ((RTICdrStream_align((me), 8) &&                                    \
      RTICdrStream_checkSize((me), 8)) ?                                \
     (RTICdrStream_serialize8ByteFast((me), (const RTICdr8Byte *)(in)), \
      RTI_TRUE) : RTI_FALSE)

  #define RTICdrStream_deserialize8Byte(me, in)                       \
    ((RTICdrStream_align((me), 8) &&                                  \
      RTICdrStream_checkSize((me), 8)) ?                              \
     (RTICdrStream_deserialize8ByteFast((me), (RTICdr8Byte *)(in)),   \
      RTI_TRUE) : RTI_FALSE)

  #define RTICdrStream_skip8Byte(me)                                  \
    ((RTICdrStream_align((me), 8) &&                                  \
      RTICdrStream_checkSize((me), 8)) ?                              \
     (RTICdrStream_skip8ByteFast((me)),                               \
      RTI_TRUE) : RTI_FALSE)

  #define RTICdrStream_serialize16Byte(me, in)                            \
    ((RTICdrStream_align((me), 8) &&                                      \
      RTICdrStream_checkSize((me), 16)) ?                                 \
     (RTICdrStream_serialize16ByteFast((me), (const RTICdr16Byte *)(in)), \
      RTI_TRUE) : RTI_FALSE)

  #define RTICdrStream_deserialize16Byte(me, in)                      \
    ((RTICdrStream_align((me), 8) &&                                  \
      RTICdrStream_checkSize((me), 16)) ?                             \
     (RTICdrStream_deserialize16ByteFast((me), (RTICdr16Byte *)(in)), \
      RTI_TRUE) : RTI_FALSE)

  #define RTICdrStream_skip16Byte(me)                                 \
    ((RTICdrStream_align((me), 8) &&                                  \
      RTICdrStream_checkSize((me), 16)) ?                             \
     (RTICdrStream_skip16ByteFast((me)),                              \
      RTI_TRUE) : RTI_FALSE)

  #define RTICdrStream_serializeChar RTICdrStream_serialize1Byte
  #define RTICdrStream_deserializeChar RTICdrStream_deserialize1Byte
  #define RTICdrStream_skipChar RTICdrStream_skip1Byte

  #define RTICdrStream_serializeWchar RTICdrStream_serialize4Byte
  #define RTICdrStream_deserializeWchar RTICdrStream_deserialize4Byte
  #define RTICdrStream_skipWchar RTICdrStream_skip4Byte
                        
  #define RTICdrStream_serializeOctet RTICdrStream_serialize1Byte
  #define RTICdrStream_deserializeOctet RTICdrStream_deserialize1Byte
  #define RTICdrStream_skipOctet RTICdrStream_skip1Byte

  #define RTICdrStream_serializeShort RTICdrStream_serialize2Byte
  #define RTICdrStream_deserializeShort RTICdrStream_deserialize2Byte
  #define RTICdrStream_skipShort RTICdrStream_skip2Byte

  #define RTICdrStream_serializeUnsignedShort RTICdrStream_serialize2Byte
  #define RTICdrStream_deserializeUnsignedShort RTICdrStream_deserialize2Byte
  #define RTICdrStream_skipUnsignedShort RTICdrStream_skip2Byte

  #define RTICdrStream_serializeLong RTICdrStream_serialize4Byte
  #define RTICdrStream_deserializeLong RTICdrStream_deserialize4Byte
  #define RTICdrStream_skipLong RTICdrStream_skip4Byte

  #define RTICdrStream_serializeUnsignedLong RTICdrStream_serialize4Byte
  #define RTICdrStream_deserializeUnsignedLong RTICdrStream_deserialize4Byte
  #define RTICdrStream_skipUnsignedLong RTICdrStream_skip4Byte

  #define RTICdrStream_serializeLongLong RTICdrStream_serialize8Byte
  #define RTICdrStream_deserializeLongLong RTICdrStream_deserialize8Byte
  #define RTICdrStream_skipLongLong RTICdrStream_skip8Byte

  #define RTICdrStream_serializeUnsignedLongLong RTICdrStream_serialize8Byte
  #define RTICdrStream_deserializeUnsignedLongLong RTICdrStream_deserialize8Byte
  #define RTICdrStream_skipUnsignedLongLong RTICdrStream_skip8Byte

  #define RTICdrStream_serializeFloat RTICdrStream_serialize4Byte
  #define RTICdrStream_deserializeFloat RTICdrStream_deserialize4Byte
  #define RTICdrStream_skipFloat RTICdrStream_skip4Byte

  #define RTICdrStream_serializeDouble(me, in)                            \
    ((RTICdrStream_align((me), 8) &&                                      \
      RTICdrStream_checkSize((me), 8)) ?                                  \
     (RTICdrStream_serializeDoubleFast((me), (const RTICdrDouble *)(in)), \
      RTI_TRUE) : RTI_FALSE)

  #define RTICdrStream_deserializeDouble(me, out)                      \
    ((RTICdrStream_align((me), 8) &&                                   \
      RTICdrStream_checkSize((me), 8)) ?                               \
     (RTICdrStream_deserializeDoubleFast((me), (RTICdrDouble *)(out)), \
      RTI_TRUE) : RTI_FALSE)

  #define RTICdrStream_skipDouble(me)                                  \
    ((RTICdrStream_align((me), 8) &&                                   \
      RTICdrStream_checkSize((me), 8)) ?                               \
     (RTICdrStream_skipDoubleFast((me)),                               \
      RTI_TRUE) : RTI_FALSE)

  #define RTICdrStream_serializeLongDouble RTICdrStream_serialize16Byte
  #define RTICdrStream_deserializeLongDouble RTICdrStream_deserialize16Byte
  #define RTICdrStream_skipLongDouble RTICdrStream_skip16Byte

  #define RTICdrStream_serializeBoolean RTICdrStream_serialize1Byte
  #define RTICdrStream_deserializeBoolean RTICdrStream_deserialize1Byte
  #define RTICdrStream_skipBoolean RTICdrStream_skip1Byte

  #define RTICdrStream_serializeEnum RTICdrStream_serialize4Byte
  #define RTICdrStream_deserializeEnum RTICdrStream_deserialize4Byte
  #define RTICdrStream_skipEnum RTICdrStream_skip4Byte




#define RTICdrStream_serialize2ByteToBigEndianFromStreamMacro(me, in) ( \
  (((me)->_endian == RTI_CDR_ENDIAN_BIG && (me)->_needByteSwap == RTI_TRUE) ||  \
   ((me)->_endian == RTI_CDR_ENDIAN_LITTLE && (me)->_needByteSwap == RTI_FALSE)) ?  \
    ((void)(*((me)->_currentPosition++) = *((char *)(in) + 1),            \
            *((me)->_currentPosition++) = *((char *)(in)    ))) :         \
    ((void)(*((me)->_currentPosition++) = *((char *)(in)    ),            \
            *((me)->_currentPosition++) = *((char *)(in) + 1)))           \
  )

#define RTICdrStream_deserialize2ByteFromBigEndianFromStreamMacro(me, out) ( \
  (((me)->_endian == RTI_CDR_ENDIAN_BIG && (me)->_needByteSwap == RTI_TRUE) ||  \
   ((me)->_endian == RTI_CDR_ENDIAN_LITTLE && (me)->_needByteSwap == RTI_FALSE)) ?  \
    ((void)( *((char *)(out) + 1) = *((me)->_currentPosition++),        \
        *((char *)(out)    ) = *((me)->_currentPosition++)))   :        \
    ((void)(*((char *)(out)    ) = *((me)->_currentPosition++),         \
       *((char *)(out) + 1) = *((me)->_currentPosition++)))              \
  )

#define RTICdrStream_deserialize4ByteFromBigEndianFromStreamMacro(me, out) ( \
  (((me)->_endian == RTI_CDR_ENDIAN_BIG && (me)->_needByteSwap == RTI_TRUE) ||  \
   ((me)->_endian == RTI_CDR_ENDIAN_LITTLE && (me)->_needByteSwap == RTI_FALSE)) ?  \
    ((void)( *((char *)(out) + 3) = *((me)->_currentPosition++),        \
             *((char *)(out) + 2) = *((me)->_currentPosition++),        \
             *((char *)(out) + 1) = *((me)->_currentPosition++),        \
             *((char *)(out)    ) = *((me)->_currentPosition++)))   :   \
    ((void)( *((char *)(out)    ) = *((me)->_currentPosition++),        \
             *((char *)(out) + 1) = *((me)->_currentPosition++),        \
             *((char *)(out) + 2) = *((me)->_currentPosition++),        \
             *((char *)(out) + 3) = *((me)->_currentPosition++)))       \
  )

#define RTICdrStream_serialize4ByteToBigEndianFromStreamMacro(me, in) ( \
  (((me)->_endian == RTI_CDR_ENDIAN_BIG && (me)->_needByteSwap == RTI_TRUE) ||  \
   ((me)->_endian == RTI_CDR_ENDIAN_LITTLE && (me)->_needByteSwap == RTI_FALSE)) ?  \
    ((void)(*((me)->_currentPosition++) = *((char *)(in) + 3),            \
            *((me)->_currentPosition++) = *((char *)(in) + 2),            \
            *((me)->_currentPosition++) = *((char *)(in) + 1),            \
            *((me)->_currentPosition++) = *((char *)(in)    ))) :         \
    ((void)(*((me)->_currentPosition++) = *((char *)(in)    ),            \
            *((me)->_currentPosition++) = *((char *)(in) + 1),            \
            *((me)->_currentPosition++) = *((char *)(in) + 2),            \
            *((me)->_currentPosition++) = *((char *)(in) + 3)))           \
  )


#ifdef RTI_ENDIAN_LITTLE
/* Flip the bytes to ensure big-endian byte ordering */

#define RTICdrStream_serialize2ByteToBigEndianFastMacro(me, in) \
     ( (void)(*((me)->_currentPosition++) = *((char *)(in) + 1),         \
     *((me)->_currentPosition++) = *((char *)(in)    )))

#define RTICdrStream_deserialize2ByteFromBigEndianFastMacro(me, out)   \
     ((void)( *((char *)(out) + 1) = *((me)->_currentPosition++), \
      *((char *)(out)    ) = *((me)->_currentPosition++)))

#define RTICdrStream_serialize4ByteToBigEndianFastMacro(me, in)   \
      ((void)( *((me)->_currentPosition++) = *((char *)(in) + 3), \
               *((me)->_currentPosition++) = *((char *)(in) + 2), \
               *((me)->_currentPosition++) = *((char *)(in) + 1), \
               *((me)->_currentPosition++) = *((char *)(in)    ) ))

#define RTICdrStream_deserialize4ByteFromBigEndianFastMacro(me, out)   \
((void)( *((char *)(out) + 3) = *((me)->_currentPosition++), \
         *((char *)(out) + 2) = *((me)->_currentPosition++), \
         *((char *)(out) + 1) = *((me)->_currentPosition++), \
         *((char *)(out)    ) = *((me)->_currentPosition++) ))


#define RTICdrStream_serializeBigEndianTo4ByteFastMacro(me, in) \
      *((me)->_currentPosition++) = *((char *)(in) + 3);        \
      *((me)->_currentPosition++) = *((char *)(in) + 2);        \
      *((me)->_currentPosition++) = *((char *)(in) + 1);        \
      *((me)->_currentPosition++) = *((char *)(in)    )
#else
/* need to do it byte by byte because there is no alignment assumption */

#define RTICdrStream_serialize2ByteToBigEndianFastMacro(me, in) \
      ((void)(*((me)->_currentPosition++) = *((char *)(in)    ),        \
      *((me)->_currentPosition++) = *((char *)(in) + 1)))

#define RTICdrStream_deserialize2ByteFromBigEndianFastMacro(me, out) \
      ((void)(*((char *)(out)    ) = *((me)->_currentPosition++),           \
      *((char *)(out) + 1) = *((me)->_currentPosition++)))

#define RTICdrStream_serialize4ByteToBigEndianFastMacro(me, in) \
((void)( *((me)->_currentPosition++) = *((char *)(in)    ),        \
         *((me)->_currentPosition++) = *((char *)(in) + 1),        \
         *((me)->_currentPosition++) = *((char *)(in) + 2),        \
         *((me)->_currentPosition++) = *((char *)(in) + 3) ))

#define RTICdrStream_deserialize4ByteFromBigEndianFastMacro(me, out) \
((void)( *((char *)(out)    ) = *((me)->_currentPosition++),            \
         *((char *)(out) + 1) = *((me)->_currentPosition++),            \
         *((char *)(out) + 2) = *((me)->_currentPosition++),            \
         *((char *)(out) + 3) = *((me)->_currentPosition++) ))

#define RTICdrStream_serializeBigEndianTo4ByteFastMacro(me, in) \
      *((me)->_currentPosition++) = *((char *)(in)    );        \
      *((me)->_currentPosition++) = *((char *)(in) + 1);        \
      *((me)->_currentPosition++) = *((char *)(in) + 2);        \
      *((me)->_currentPosition++) = *((char *)(in) + 3)

#endif /* RTI_ENDIAN_LITTLE */

#define RTICdrStream_deserializeBigEndianFrom4ByteFastMacro(me, out) \
      ((me->_endian == RTI_CDR_ENDIAN_LITTLE) ?                          \
       (*((char *)(out) + 3) = *((me)->_currentPosition++),   \
        *((char *)(out) + 2) = *((me)->_currentPosition++),   \
        *((char *)(out) + 1) = *((me)->_currentPosition++),   \
        *((char *)(out)    ) = *((me)->_currentPosition++)) : \
       (*((char *)(out)    ) = *((me)->_currentPosition++),   \
        *((char *)(out) + 1) = *((me)->_currentPosition++),   \
        *((char *)(out) + 2) = *((me)->_currentPosition++),   \
        *((char *)(out) + 3) = *((me)->_currentPosition++)))

#ifndef RTI_PRECONDITION_TEST
  #define RTICdrStream_serialize2ByteToBigEndianFast \
     RTICdrStream_serialize2ByteToBigEndianFastMacro

  #define RTICdrStream_serialize4ByteToBigEndianFast \
     RTICdrStream_serialize4ByteToBigEndianFastMacro

  #define RTICdrStream_serializeBigEndianTo4ByteFast \
     RTICdrStream_serializeBigEndianTo4ByteFastMacro

  #define RTICdrStream_deserialize2ByteFromBigEndianFast \
     RTICdrStream_deserialize2ByteFromBigEndianFastMacro

  #define RTICdrStream_deserialize4ByteFromBigEndianFast \
     RTICdrStream_deserialize4ByteFromBigEndianFastMacro

  #define RTICdrStream_deserializeBigEndianFrom4ByteFast \
     RTICdrStream_deserializeBigEndianFrom4ByteFastMacro
#else
  RTICdrDllExport
  void RTICdrStream_serialize2ByteToBigEndianFast(struct RTICdrStream *me,
						  const RTICdr2Byte *in);

  RTICdrDllExport
  void RTICdrStream_deserialize2ByteFromBigEndianFast(struct RTICdrStream *me,
						      RTICdr2Byte *out);

  RTICdrDllExport
  void RTICdrStream_serialize4ByteToBigEndianFast(struct RTICdrStream *me,
						  const RTICdr4Byte *in);

  RTICdrDllExport
  void RTICdrStream_deserialize4ByteFromBigEndianFast(struct RTICdrStream *me,
						      RTICdr4Byte *out);

  RTICdrDllExport
  void RTICdrStream_serializeBigEndianTo4ByteFast(struct RTICdrStream *me,
						  const RTICdrOctet *in);

  RTICdrDllExport
  void RTICdrStream_deserializeBigEndianFrom4ByteFast(struct RTICdrStream *me,
						      RTICdrOctet *out);
#endif /* RTI_PRECONDITION_TEST */

/* fast methods */
#define RTICdrStream_serializeUnsignedShortToBigEndianFast \
  RTICdrStream_serialize2ByteToBigEndianFast

#define RTICdrStream_deserializeUnsignedShortFromBigEndianFast \
  RTICdrStream_deserialize2ByteFromBigEndianFast

#define RTICdrStream_serializeUnsignedLongToBigEndianFast \
  RTICdrStream_serialize4ByteToBigEndianFast

#define RTICdrStream_deserializeUnsignedLongFromBigEndianFast \
  RTICdrStream_deserialize4ByteFromBigEndianFast

#define RTICdrStream_serializeBigEndianToUnsignedLongFast \
  RTICdrStream_serializeBigEndianTo4ByteFast

#define RTICdrStream_deserializeBigEndianFromUnsignedLongFast \
  RTICdrStream_deserializeBigEndianFrom4ByteFast

#define RTICdrStream_serializeUnsignedShortToBigEndianFromStream \
  RTICdrStream_serialize2ByteToBigEndianFromStreamMacro

#define RTICdrStream_deserializeUnsignedShortFromBigEndianFromStream \
  RTICdrStream_deserialize2ByteFromBigEndianFromStreamMacro

#define RTICdrStream_serializeUnsignedLongToBigEndianFromStream \
  RTICdrStream_serialize4ByteToBigEndianFromStreamMacro

#define RTICdrStream_deserializeUnsignedLongFromBigEndianFromStream \
  RTICdrStream_deserialize4ByteFromBigEndianFromStreamMacro

/* verifiable to-big-endian methods */
#define RTICdrStream_serializeUnsignedShortToBigEndian(me, in) \
  (RTICdrStream_checkSize((me), 2) ?                                \
   (RTICdrStream_serializeUnsignedShortToBigEndianFromStream(me, in), \
   RTI_TRUE) : RTI_FALSE)

#define RTICdrStream_deserializeUnsignedShortFromBigEndian(me, in) \
  ( RTICdrStream_checkSize((me), 2) ?                                \
   (RTICdrStream_deserializeUnsignedShortFromBigEndianFromStream(me, in), \
   RTI_TRUE) : RTI_FALSE)

#define RTICdrStream_serializeUnsignedLongToBigEndian(me, in) \
  (RTICdrStream_checkSize((me), 4) ?                                \
   (RTICdrStream_serializeUnsignedLongToBigEndianFromStream(me, in), \
   RTI_TRUE) : RTI_FALSE)

#define RTICdrStream_deserializeUnsignedLongFromBigEndian(me, in) \
  ( RTICdrStream_checkSize((me), 4) ?                                \
   (RTICdrStream_deserializeUnsignedLongFromBigEndianFromStream(me, in), \
   RTI_TRUE) : RTI_FALSE)

/*********************************************************************/
#define RTICdrStream_setEndianFromEncapsulationDefault(me) \
(((me)->_encapsulationKind == RTI_CDR_ENCAPSULATION_ID_CDR_BE && (me)->_endian != RTI_CDR_ENDIAN_BIG) ? \
 ((me)->_endian = RTI_CDR_ENDIAN_BIG, \
  (me)->_needByteSwap = ((me)->_nativeEndian == RTI_CDR_ENDIAN_BIG) ? RTI_FALSE : RTI_TRUE, RTI_TRUE) : \
 (((me)->_encapsulationKind == RTI_CDR_ENCAPSULATION_ID_CDR_LE && (me)->_endian != RTI_CDR_ENDIAN_LITTLE) ? \
  ((me)->_endian = RTI_CDR_ENDIAN_LITTLE, \
   (me)->_needByteSwap = ((me)->_nativeEndian == RTI_CDR_ENDIAN_BIG) ? RTI_TRUE : RTI_FALSE, RTI_TRUE) : \
  (((me)->_encapsulationKind != RTI_CDR_ENCAPSULATION_ID_CDR_BE && \
    (me)->_encapsulationKind != RTI_CDR_ENCAPSULATION_ID_CDR_LE) ? RTI_FALSE : RTI_TRUE)))

#define RTICdrStream_setEndianFromParameterEncapsulationDefault(me) \
(((me)->_encapsulationKind == RTI_CDR_ENCAPSULATION_ID_PL_CDR_BE && (me)->_endian != RTI_CDR_ENDIAN_BIG) ? \
 ((me)->_endian = RTI_CDR_ENDIAN_BIG, \
  (me)->_needByteSwap = ((me)->_nativeEndian == RTI_CDR_ENDIAN_BIG) ? RTI_FALSE : RTI_TRUE, RTI_TRUE) : \
 (((me)->_encapsulationKind == RTI_CDR_ENCAPSULATION_ID_PL_CDR_LE && (me)->_endian != RTI_CDR_ENDIAN_LITTLE) ? \
  ((me)->_endian = RTI_CDR_ENDIAN_LITTLE, \
   (me)->_needByteSwap = ((me)->_nativeEndian == RTI_CDR_ENDIAN_BIG) ? RTI_TRUE : RTI_FALSE, RTI_TRUE) : \
  (((me)->_encapsulationKind != RTI_CDR_ENCAPSULATION_ID_PL_CDR_BE && \
    (me)->_encapsulationKind != RTI_CDR_ENCAPSULATION_ID_PL_CDR_LE) ? RTI_FALSE : RTI_TRUE)))

#define RTICdrStream_serializeCdrEncapsulationDefault(me) \
((RTICdrStream_serializeUnsignedShortToBigEndian(me, &me->_encapsulationKind)) ?  \
(RTICdrStream_serializeUnsignedShortToBigEndian(me, &me->_encapsulationOptions)) : RTI_FALSE)

#define RTICdrStream_serializeCdrEncapsulation(me, kind, opts) \
((RTICdrStream_serializeUnsignedShortToBigEndian(me, kind)) ?  \
(RTICdrStream_serializeUnsignedShortToBigEndian(me, opts)) : RTI_FALSE)

#define RTICdrStream_deserializeCdrEncapsulationAndSetDefault(me) \
((RTICdrStream_deserializeUnsignedShortFromBigEndian(me, &me->_encapsulationKind)) ? \
((RTICdrStream_deserializeUnsignedShortFromBigEndian(me, &me->_encapsulationOptions)) ? \
  (RTICdrStream_setEndianFromEncapsulationDefault(me)) : RTI_FALSE) : RTI_FALSE)

#define RTICdrStream_deserializeParameterCdrEncapsulationAndSetDefault(me) \
((RTICdrStream_deserializeUnsignedShortFromBigEndian(me, &me->_encapsulationKind)) ? \
((RTICdrStream_deserializeUnsignedShortFromBigEndian(me, &me->_encapsulationOptions)) ? \
  (RTICdrStream_setEndianFromParameterEncapsulationDefault(me)) : RTI_FALSE) : RTI_FALSE)

#define RTICdrStream_deserializeCdrEncapsulation(me, kind, opts) \
((RTICdrStream_deserializeUnsignedShortFromBigEndian(me, kind)) ?  \
(RTICdrStream_deserializeUnsignedShortFromBigEndian(me, opts)) : RTI_FALSE)

#define RTICdrStream_pushEndian(me, endian, needByteSwap) \
*(endian) = (me)->_endian; \
*(needByteSwap) = (me)->_needByteSwap; 


#define RTICdrStream_popEndian(me, endian, needByteSwap) \
(me)->_endian = *(endian); \
(me)->_needByteSwap = *(needByteSwap);


#define RTICdrStream_setEncapsulationKind(me, kind, options) ( \
(RTICdrEncapsulation_validCdrEncapsulation((kind),(options),NULL)) ? \
((kind) == RTI_CDR_ENCAPSULATION_ID_CDR_LE ?  \
   (((me)->_nativeEndian == RTI_CDR_ENDIAN_LITTLE) ? ((me)->_endian = RTI_CDR_ENDIAN_LITTLE, \
                                      (me)->_needByteSwap = RTI_FALSE, (me)->_encapsulationKind = kind, \
                                      (me)->_encapsulationOptions = options, RTI_TRUE) : \
       ((me)->_endian = RTI_CDR_ENDIAN_LITTLE, (me)->_needByteSwap = RTI_TRUE, \
        (me)->_encapsulationKind = kind, (me)->_encapsulationOptions = options, RTI_TRUE)) : \
   (((me)->_nativeEndian == RTI_CDR_ENDIAN_LITTLE) ? ((me)->_endian = RTI_CDR_ENDIAN_BIG, \
                                      (me)->_needByteSwap = RTI_TRUE, (me)->_encapsulationKind = kind, \
                                      (me)->_encapsulationOptions = options, RTI_TRUE) : \
       ((me)->_endian = RTI_CDR_ENDIAN_BIG, (me)->_needByteSwap = RTI_FALSE, \
       (me)->_encapsulationKind = kind, (me)->_encapsulationOptions = options, RTI_TRUE))) : \
((me)->_encapsulationKind = kind, (me)->_encapsulationOptions = options, RTI_FALSE))



#ifdef __cplusplus
    }	/* extern "C" */
#endif

#endif /* cdr_stream_impl_h */
