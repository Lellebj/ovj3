/*
 * @(#)cdr_encapsulation.h    generated by: makeheader    Mon Dec  3 23:08:01 2007
 *
 *		built from:	encapsulation.ifc
 */

#ifndef cdr_encapsulation_h
#define cdr_encapsulation_h



#ifndef cdr_dll_h
#include "cdr/cdr_dll.h"
#endif

#ifndef osapi_type_h
#include "osapi/osapi_type.h"
#endif

/* For VxWorks defines */
#ifdef RTI_VXWORKS
#include <vxWorks.h>
#endif

#ifdef __cplusplus
    extern "C" {
#endif


/* OMG CDR Big Endian */
#define RTI_CDR_ENCAPSULATION_ID_CDR_BE     0x0000
/* OMG CDR Little Endian */
#define RTI_CDR_ENCAPSULATION_ID_CDR_LE     0x0001
/* Parameter List OMG CDR Big Endian */
#define RTI_CDR_ENCAPSULATION_ID_PL_CDR_BE  0x0002
/* Parameter List OMG CDR Little Endian */
#define RTI_CDR_ENCAPSULATION_ID_PL_CDR_LE  0x0003

#define RTI_CDR_ENCAPSULATION_OPTIONS_NONE  0x0000

#define RTI_CDR_ENCAPSULATION_HEADER_SIZE   4


typedef RTI_UINT16 RTIEncapsulationId;

typedef RTI_UINT16 RTIEncapsulationOptions;

typedef RTIEncapsulationId RTICdrEncapsulationId;

typedef RTIEncapsulationOptions RTICdrEncapsulationOptions;

struct RTICdrEncapsulation {
    RTICdrEncapsulationId identifier;
    RTICdrEncapsulationOptions options;
};

extern RTICdrDllExport 
RTIBool RTICdrEncapsulation_validCdrEncapsulation(
    unsigned short identifer, unsigned short options, void *serializeOptions);

extern RTICdrDllExport 
RTIBool RTICdrEncapsulation_validParameterCdrEncapsulation(
    unsigned short identifer, unsigned short options, void *serializeOptions);


#ifdef __cplusplus
    }	/* extern "C" */
#endif

#include "cdr/cdr_encapsulation_impl.h"


#endif /* cdr_encapsulation_h */
