/*
 * @(#)cdr_log.h    generated by: makeheader    Mon Dec  3 23:08:01 2007
 *
 *		built from:	log.ifc
 */

#ifndef cdr_log_h
#define cdr_log_h


  #ifndef cdr_dll_h
    #include "cdr/cdr_dll.h"
  #endif
  #ifndef log_common_h
    #include "log/log_common.h"
  #endif

#ifdef __cplusplus
    extern "C" {
#endif


/*e \ingroup RTICdrLog
  Submodule ID for error code */
  #define SUBMODULE_CDR_STREAM                  (0x0000)
  #define SUBMODULE_CDR_TYPE_CODE               (0x0001)


/*e \ingroup RTICdrLog
  Stream submodule mask for logging.
*/
  #define RTI_CDR_SUBMODULE_MASK_STREAM         (0x0001)
/*e \ingroup RTICdrLog
  Type code submodule mask for logging.
*/
  #define RTI_CDR_SUBMODULE_MASK_TYPE_CODE      (0x0002)  
/*e \ingroup RTICdrLog
  Mask for turning on logging for all submodules.
*/
  #define RTI_CDR_SUBMODULE_MASK_ALL            (0xFFFF)

extern RTICdrDllExport
void RTICdrLog_setVerbosity(RTILogBitmap submoduleMask, int verbosity);

extern RTICdrDllExport void
RTICdrLog_setBitmaps(RTILogBitmap submoduleMask,
		     RTILogBitmap instrumentationMask);

extern RTICdrDllExport void RTICdrLog_getBitmaps(
    RTILogBitmap *submoduleMask, RTILogBitmap *instrumentationMask);

extern RTICdrDllVariable const struct RTILogMessage RTI_CDR_LOG_SERIALIZE_FAILURE_s;

extern RTICdrDllVariable const struct RTILogMessage RTI_CDR_LOG_DESERIALIZE_FAILURE_s;


#ifdef __cplusplus
    }	/* extern "C" */
#endif

#endif /* cdr_log_h */
